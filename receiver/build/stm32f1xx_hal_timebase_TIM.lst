ARM GAS  /tmp/cc0rn3mb.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_timebase_TIM.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_InitTick,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_InitTick
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_InitTick:
  24              	.LFB64:
  25              		.file 1 "Src/stm32f1xx_hal_timebase_TIM.c"
   1:Src/stm32f1xx_hal_timebase_TIM.c **** /**
   2:Src/stm32f1xx_hal_timebase_TIM.c ****   ******************************************************************************
   3:Src/stm32f1xx_hal_timebase_TIM.c ****   * @file    stm32f1xx_hal_timebase_TIM.c 
   4:Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief   HAL time base based on the hardware TIM.
   5:Src/stm32f1xx_hal_timebase_TIM.c ****   ******************************************************************************
   6:Src/stm32f1xx_hal_timebase_TIM.c ****   * This notice applies to any and all portions of this file
   7:Src/stm32f1xx_hal_timebase_TIM.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/stm32f1xx_hal_timebase_TIM.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/stm32f1xx_hal_timebase_TIM.c ****   * inserted by the user or by software development tools
  10:Src/stm32f1xx_hal_timebase_TIM.c ****   * are owned by their respective copyright owners.
  11:Src/stm32f1xx_hal_timebase_TIM.c ****   *
  12:Src/stm32f1xx_hal_timebase_TIM.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  13:Src/stm32f1xx_hal_timebase_TIM.c ****   * All rights reserved.
  14:Src/stm32f1xx_hal_timebase_TIM.c ****   *
  15:Src/stm32f1xx_hal_timebase_TIM.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/stm32f1xx_hal_timebase_TIM.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/stm32f1xx_hal_timebase_TIM.c ****   *
  18:Src/stm32f1xx_hal_timebase_TIM.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/stm32f1xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer.
  20:Src/stm32f1xx_hal_timebase_TIM.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/stm32f1xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/stm32f1xx_hal_timebase_TIM.c ****   *    and/or other materials provided with the distribution.
  23:Src/stm32f1xx_hal_timebase_TIM.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/stm32f1xx_hal_timebase_TIM.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/stm32f1xx_hal_timebase_TIM.c ****   *    derived from this software without specific written permission.
  26:Src/stm32f1xx_hal_timebase_TIM.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/stm32f1xx_hal_timebase_TIM.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/stm32f1xx_hal_timebase_TIM.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/stm32f1xx_hal_timebase_TIM.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/stm32f1xx_hal_timebase_TIM.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/stm32f1xx_hal_timebase_TIM.c ****   *    this license. 
  32:Src/stm32f1xx_hal_timebase_TIM.c ****   *
  33:Src/stm32f1xx_hal_timebase_TIM.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
ARM GAS  /tmp/cc0rn3mb.s 			page 2


  34:Src/stm32f1xx_hal_timebase_TIM.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/stm32f1xx_hal_timebase_TIM.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/stm32f1xx_hal_timebase_TIM.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/stm32f1xx_hal_timebase_TIM.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/stm32f1xx_hal_timebase_TIM.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/stm32f1xx_hal_timebase_TIM.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/stm32f1xx_hal_timebase_TIM.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/stm32f1xx_hal_timebase_TIM.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/stm32f1xx_hal_timebase_TIM.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/stm32f1xx_hal_timebase_TIM.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/stm32f1xx_hal_timebase_TIM.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/stm32f1xx_hal_timebase_TIM.c ****   *
  46:Src/stm32f1xx_hal_timebase_TIM.c ****   ******************************************************************************
  47:Src/stm32f1xx_hal_timebase_TIM.c ****   */
  48:Src/stm32f1xx_hal_timebase_TIM.c **** 
  49:Src/stm32f1xx_hal_timebase_TIM.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/stm32f1xx_hal_timebase_TIM.c **** #include "stm32f1xx_hal.h"
  51:Src/stm32f1xx_hal_timebase_TIM.c **** #include "stm32f1xx_hal_tim.h"
  52:Src/stm32f1xx_hal_timebase_TIM.c **** /** @addtogroup STM32F7xx_HAL_Examples
  53:Src/stm32f1xx_hal_timebase_TIM.c ****   * @{
  54:Src/stm32f1xx_hal_timebase_TIM.c ****   */
  55:Src/stm32f1xx_hal_timebase_TIM.c **** 
  56:Src/stm32f1xx_hal_timebase_TIM.c **** /** @addtogroup HAL_TimeBase
  57:Src/stm32f1xx_hal_timebase_TIM.c ****   * @{
  58:Src/stm32f1xx_hal_timebase_TIM.c ****   */ 
  59:Src/stm32f1xx_hal_timebase_TIM.c **** 
  60:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private typedef -----------------------------------------------------------*/
  61:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private define ------------------------------------------------------------*/
  62:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private macro -------------------------------------------------------------*/
  63:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private variables ---------------------------------------------------------*/
  64:Src/stm32f1xx_hal_timebase_TIM.c **** TIM_HandleTypeDef        htim1; 
  65:Src/stm32f1xx_hal_timebase_TIM.c **** uint32_t                 uwIncrementState = 0;
  66:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private function prototypes -----------------------------------------------*/
  67:Src/stm32f1xx_hal_timebase_TIM.c **** /* Private functions ---------------------------------------------------------*/
  68:Src/stm32f1xx_hal_timebase_TIM.c **** 
  69:Src/stm32f1xx_hal_timebase_TIM.c **** /**
  70:Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief  This function configures the TIM1 as a time base source. 
  71:Src/stm32f1xx_hal_timebase_TIM.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  72:Src/stm32f1xx_hal_timebase_TIM.c ****   *         Tick interrupt priority. 
  73:Src/stm32f1xx_hal_timebase_TIM.c ****   * @note   This function is called  automatically at the beginning of program after
  74:Src/stm32f1xx_hal_timebase_TIM.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  75:Src/stm32f1xx_hal_timebase_TIM.c ****   * @param  TickPriority: Tick interrupt priorty.
  76:Src/stm32f1xx_hal_timebase_TIM.c ****   * @retval HAL status
  77:Src/stm32f1xx_hal_timebase_TIM.c ****   */
  78:Src/stm32f1xx_hal_timebase_TIM.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  79:Src/stm32f1xx_hal_timebase_TIM.c **** {
  26              		.loc 1 79 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  80:Src/stm32f1xx_hal_timebase_TIM.c ****   RCC_ClkInitTypeDef    clkconfig;
ARM GAS  /tmp/cc0rn3mb.s 			page 3


  81:Src/stm32f1xx_hal_timebase_TIM.c ****   uint32_t              uwTimclock = 0;
  82:Src/stm32f1xx_hal_timebase_TIM.c ****   uint32_t              uwPrescalerValue = 0;
  83:Src/stm32f1xx_hal_timebase_TIM.c ****   uint32_t              pFLatency;
  84:Src/stm32f1xx_hal_timebase_TIM.c ****   
  85:Src/stm32f1xx_hal_timebase_TIM.c ****   /*Configure the TIM1 IRQ priority */
  86:Src/stm32f1xx_hal_timebase_TIM.c ****   HAL_NVIC_SetPriority(TIM1_UP_IRQn, TickPriority ,0); 
  36              		.loc 1 86 0
  37 0002 0146     		mov	r1, r0
  79:Src/stm32f1xx_hal_timebase_TIM.c ****   RCC_ClkInitTypeDef    clkconfig;
  38              		.loc 1 79 0
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 40
  42              		.loc 1 86 0
  43 0006 0022     		movs	r2, #0
  44 0008 1920     		movs	r0, #25
  45              	.LVL1:
  46 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  47              	.LVL2:
  87:Src/stm32f1xx_hal_timebase_TIM.c ****   
  88:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Enable the TIM1 global Interrupt */
  89:Src/stm32f1xx_hal_timebase_TIM.c ****   HAL_NVIC_EnableIRQ(TIM1_UP_IRQn); 
  48              		.loc 1 89 0
  49 000e 1920     		movs	r0, #25
  50 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  51              	.LVL3:
  52              	.LBB2:
  90:Src/stm32f1xx_hal_timebase_TIM.c ****   
  91:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Enable TIM1 clock */
  92:Src/stm32f1xx_hal_timebase_TIM.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  53              		.loc 1 92 0
  54 0014 144B     		ldr	r3, .L4
  55              	.LBE2:
  93:Src/stm32f1xx_hal_timebase_TIM.c ****   
  94:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Get clock configuration */
  95:Src/stm32f1xx_hal_timebase_TIM.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  56              		.loc 1 95 0
  57 0016 01A9     		add	r1, sp, #4
  58              	.LBB3:
  92:Src/stm32f1xx_hal_timebase_TIM.c ****   
  59              		.loc 1 92 0
  60 0018 9A69     		ldr	r2, [r3, #24]
  61              	.LBE3:
  62              		.loc 1 95 0
  63 001a 03A8     		add	r0, sp, #12
  64              	.LBB4:
  92:Src/stm32f1xx_hal_timebase_TIM.c ****   
  65              		.loc 1 92 0
  66 001c 42F40062 		orr	r2, r2, #2048
  67 0020 9A61     		str	r2, [r3, #24]
  68 0022 9B69     		ldr	r3, [r3, #24]
  69              	.LBE4:
  96:Src/stm32f1xx_hal_timebase_TIM.c ****   
  97:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Compute TIM1 clock */
  98:Src/stm32f1xx_hal_timebase_TIM.c ****   uwTimclock = HAL_RCC_GetPCLK2Freq();
  99:Src/stm32f1xx_hal_timebase_TIM.c ****    
 100:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
ARM GAS  /tmp/cc0rn3mb.s 			page 4


 101:Src/stm32f1xx_hal_timebase_TIM.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 102:Src/stm32f1xx_hal_timebase_TIM.c ****   
 103:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Initialize TIM1 */
 104:Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Instance = TIM1;
  70              		.loc 1 104 0
  71 0024 114C     		ldr	r4, .L4+4
  72              	.LBB5:
  92:Src/stm32f1xx_hal_timebase_TIM.c ****   
  73              		.loc 1 92 0
  74 0026 03F40063 		and	r3, r3, #2048
  75 002a 0293     		str	r3, [sp, #8]
  76 002c 029B     		ldr	r3, [sp, #8]
  77              	.LBE5:
  95:Src/stm32f1xx_hal_timebase_TIM.c ****   
  78              		.loc 1 95 0
  79 002e FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  80              	.LVL4:
  98:Src/stm32f1xx_hal_timebase_TIM.c ****    
  81              		.loc 1 98 0
  82 0032 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
  83              	.LVL5:
  84              		.loc 1 104 0
  85 0036 0E4B     		ldr	r3, .L4+8
  86 0038 2360     		str	r3, [r4]
 105:Src/stm32f1xx_hal_timebase_TIM.c ****   
 106:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Initialize TIMx peripheral as follow:
 107:Src/stm32f1xx_hal_timebase_TIM.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
 108:Src/stm32f1xx_hal_timebase_TIM.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
 109:Src/stm32f1xx_hal_timebase_TIM.c ****   + ClockDivision = 0
 110:Src/stm32f1xx_hal_timebase_TIM.c ****   + Counter direction = Up
 111:Src/stm32f1xx_hal_timebase_TIM.c ****   */
 112:Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.Period = (1000000 / 1000) - 1;
  87              		.loc 1 112 0
  88 003a 40F2E733 		movw	r3, #999
  89 003e E360     		str	r3, [r4, #12]
 101:Src/stm32f1xx_hal_timebase_TIM.c ****   
  90              		.loc 1 101 0
  91 0040 0C4B     		ldr	r3, .L4+12
  92 0042 B0FBF3F0 		udiv	r0, r0, r3
  93              	.LVL6:
 113:Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.Prescaler = uwPrescalerValue;
 114:Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.ClockDivision = 0;
  94              		.loc 1 114 0
  95 0046 0023     		movs	r3, #0
 101:Src/stm32f1xx_hal_timebase_TIM.c ****   
  96              		.loc 1 101 0
  97 0048 0138     		subs	r0, r0, #1
  98              	.LVL7:
 113:Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.Prescaler = uwPrescalerValue;
  99              		.loc 1 113 0
 100 004a 6060     		str	r0, [r4, #4]
 115:Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 116:Src/stm32f1xx_hal_timebase_TIM.c ****   if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
 101              		.loc 1 116 0
 102 004c 2046     		mov	r0, r4
 103              	.LVL8:
 114:Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/cc0rn3mb.s 			page 5


 104              		.loc 1 114 0
 105 004e 2361     		str	r3, [r4, #16]
 115:Src/stm32f1xx_hal_timebase_TIM.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 106              		.loc 1 115 0
 107 0050 A360     		str	r3, [r4, #8]
 108              		.loc 1 116 0
 109 0052 FFF7FEFF 		bl	HAL_TIM_Base_Init
 110              	.LVL9:
 111 0056 20B9     		cbnz	r0, .L3
 117:Src/stm32f1xx_hal_timebase_TIM.c ****   {
 118:Src/stm32f1xx_hal_timebase_TIM.c ****     /* Start the TIM time Base generation in interrupt mode */
 119:Src/stm32f1xx_hal_timebase_TIM.c ****     return HAL_TIM_Base_Start_IT(&htim1);
 112              		.loc 1 119 0
 113 0058 2046     		mov	r0, r4
 114 005a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 115              	.LVL10:
 116              	.L2:
 120:Src/stm32f1xx_hal_timebase_TIM.c ****   }
 121:Src/stm32f1xx_hal_timebase_TIM.c ****   
 122:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Return function status */
 123:Src/stm32f1xx_hal_timebase_TIM.c ****   return HAL_ERROR;
 124:Src/stm32f1xx_hal_timebase_TIM.c **** }
 117              		.loc 1 124 0
 118 005e 08B0     		add	sp, sp, #32
 119              	.LCFI2:
 120              		.cfi_remember_state
 121              		.cfi_def_cfa_offset 8
 122              		@ sp needed
 123 0060 10BD     		pop	{r4, pc}
 124              	.L3:
 125              	.LCFI3:
 126              		.cfi_restore_state
 123:Src/stm32f1xx_hal_timebase_TIM.c **** }
 127              		.loc 1 123 0
 128 0062 0120     		movs	r0, #1
 129 0064 FBE7     		b	.L2
 130              	.L5:
 131 0066 00BF     		.align	2
 132              	.L4:
 133 0068 00100240 		.word	1073876992
 134 006c 00000000 		.word	htim1
 135 0070 002C0140 		.word	1073818624
 136 0074 40420F00 		.word	1000000
 137              		.cfi_endproc
 138              	.LFE64:
 140              		.section	.text.HAL_SuspendTick,"ax",%progbits
 141              		.align	1
 142              		.global	HAL_SuspendTick
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	HAL_SuspendTick:
 149              	.LFB65:
 125:Src/stm32f1xx_hal_timebase_TIM.c **** 
 126:Src/stm32f1xx_hal_timebase_TIM.c **** /**
 127:Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief  Suspend Tick increment.
ARM GAS  /tmp/cc0rn3mb.s 			page 6


 128:Src/stm32f1xx_hal_timebase_TIM.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
 129:Src/stm32f1xx_hal_timebase_TIM.c ****   * @param  None
 130:Src/stm32f1xx_hal_timebase_TIM.c ****   * @retval None
 131:Src/stm32f1xx_hal_timebase_TIM.c ****   */
 132:Src/stm32f1xx_hal_timebase_TIM.c **** void HAL_SuspendTick(void)
 133:Src/stm32f1xx_hal_timebase_TIM.c **** {
 150              		.loc 1 133 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 134:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Disable TIM1 update Interrupt */
 135:Src/stm32f1xx_hal_timebase_TIM.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);                                                  
 155              		.loc 1 135 0
 156 0000 034B     		ldr	r3, .L7
 157 0002 1A68     		ldr	r2, [r3]
 158 0004 D368     		ldr	r3, [r2, #12]
 159 0006 23F00103 		bic	r3, r3, #1
 160 000a D360     		str	r3, [r2, #12]
 161 000c 7047     		bx	lr
 162              	.L8:
 163 000e 00BF     		.align	2
 164              	.L7:
 165 0010 00000000 		.word	htim1
 166              		.cfi_endproc
 167              	.LFE65:
 169              		.section	.text.HAL_ResumeTick,"ax",%progbits
 170              		.align	1
 171              		.global	HAL_ResumeTick
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu softvfp
 177              	HAL_ResumeTick:
 178              	.LFB66:
 136:Src/stm32f1xx_hal_timebase_TIM.c **** }
 137:Src/stm32f1xx_hal_timebase_TIM.c **** 
 138:Src/stm32f1xx_hal_timebase_TIM.c **** /**
 139:Src/stm32f1xx_hal_timebase_TIM.c ****   * @brief  Resume Tick increment.
 140:Src/stm32f1xx_hal_timebase_TIM.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
 141:Src/stm32f1xx_hal_timebase_TIM.c ****   * @param  None
 142:Src/stm32f1xx_hal_timebase_TIM.c ****   * @retval None
 143:Src/stm32f1xx_hal_timebase_TIM.c ****   */
 144:Src/stm32f1xx_hal_timebase_TIM.c **** void HAL_ResumeTick(void)
 145:Src/stm32f1xx_hal_timebase_TIM.c **** {
 179              		.loc 1 145 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 146:Src/stm32f1xx_hal_timebase_TIM.c ****   /* Enable TIM1 Update interrupt */
 147:Src/stm32f1xx_hal_timebase_TIM.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 184              		.loc 1 147 0
 185 0000 034B     		ldr	r3, .L10
 186 0002 1A68     		ldr	r2, [r3]
 187 0004 D368     		ldr	r3, [r2, #12]
 188 0006 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/cc0rn3mb.s 			page 7


 189 000a D360     		str	r3, [r2, #12]
 190 000c 7047     		bx	lr
 191              	.L11:
 192 000e 00BF     		.align	2
 193              	.L10:
 194 0010 00000000 		.word	htim1
 195              		.cfi_endproc
 196              	.LFE66:
 198              		.global	uwIncrementState
 199              		.comm	htim1,60,4
 200              		.section	.bss.uwIncrementState,"aw",%nobits
 201              		.align	2
 204              	uwIncrementState:
 205 0000 00000000 		.space	4
 206              		.text
 207              	.Letext0:
 208              		.file 2 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_default_types.h"
 209              		.file 3 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 210              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 211              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 212              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 213              		.file 7 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 214              		.file 8 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 215              		.file 9 "/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 216              		.file 10 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 217              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 218              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 219              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 220              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 221              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/cc0rn3mb.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_timebase_TIM.c
     /tmp/cc0rn3mb.s:16     .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc0rn3mb.s:23     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc0rn3mb.s:133    .text.HAL_InitTick:0000000000000068 $d
                            *COM*:000000000000003c htim1
     /tmp/cc0rn3mb.s:141    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc0rn3mb.s:148    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc0rn3mb.s:165    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/cc0rn3mb.s:170    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc0rn3mb.s:177    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc0rn3mb.s:194    .text.HAL_ResumeTick:0000000000000010 $d
     /tmp/cc0rn3mb.s:204    .bss.uwIncrementState:0000000000000000 uwIncrementState
     /tmp/cc0rn3mb.s:201    .bss.uwIncrementState:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK2Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
