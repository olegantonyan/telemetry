ARM GAS  /tmp/ccxv9hBW.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_desc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  16              		.align	1
  17              		.global	USBD_FS_DeviceDescriptor
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	USBD_FS_DeviceDescriptor:
  24              	.LFB64:
  25              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /**
   2:Src/usbd_desc.c ****   ******************************************************************************
   3:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   4:Src/usbd_desc.c ****   * @version        : v2.0_Cube
   5:Src/usbd_desc.c ****   * @brief          : This file implements the USB Device descriptors
   6:Src/usbd_desc.c ****   ******************************************************************************
   7:Src/usbd_desc.c ****   * This notice applies to any and all portions of this file
   8:Src/usbd_desc.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbd_desc.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbd_desc.c ****   * inserted by the user or by software development tools
  11:Src/usbd_desc.c ****   * are owned by their respective copyright owners.
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  14:Src/usbd_desc.c ****   * All rights reserved.
  15:Src/usbd_desc.c ****   *
  16:Src/usbd_desc.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbd_desc.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbd_desc.c ****   *
  19:Src/usbd_desc.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbd_desc.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbd_desc.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbd_desc.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbd_desc.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbd_desc.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbd_desc.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbd_desc.c ****   *    derived from this software without specific written permission.
  27:Src/usbd_desc.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbd_desc.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbd_desc.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usbd_desc.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbd_desc.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usbd_desc.c ****   *    this license. 
  33:Src/usbd_desc.c ****   *
ARM GAS  /tmp/ccxv9hBW.s 			page 2


  34:Src/usbd_desc.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbd_desc.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbd_desc.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbd_desc.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbd_desc.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbd_desc.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbd_desc.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbd_desc.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbd_desc.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbd_desc.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbd_desc.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbd_desc.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbd_desc.c ****   *
  47:Src/usbd_desc.c ****   ******************************************************************************
  48:Src/usbd_desc.c **** */
  49:Src/usbd_desc.c **** 
  50:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/usbd_desc.c **** #include "usbd_core.h"
  52:Src/usbd_desc.c **** #include "usbd_desc.h"
  53:Src/usbd_desc.c **** #include "usbd_conf.h"
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  56:Src/usbd_desc.c ****   * @{
  57:Src/usbd_desc.c ****   */
  58:Src/usbd_desc.c **** 
  59:Src/usbd_desc.c **** /** @defgroup USBD_DESC 
  60:Src/usbd_desc.c ****   * @brief USBD descriptors module
  61:Src/usbd_desc.c ****   * @{
  62:Src/usbd_desc.c ****   */ 
  63:Src/usbd_desc.c **** 
  64:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions
  65:Src/usbd_desc.c ****   * @{
  66:Src/usbd_desc.c ****   */ 
  67:Src/usbd_desc.c **** /**
  68:Src/usbd_desc.c ****   * @}
  69:Src/usbd_desc.c ****   */ 
  70:Src/usbd_desc.c **** 
  71:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines
  72:Src/usbd_desc.c ****   * @{
  73:Src/usbd_desc.c ****   */ 
  74:Src/usbd_desc.c **** #define USBD_VID     1155
  75:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  76:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  77:Src/usbd_desc.c **** #define USBD_PID_FS     22336
  78:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Virtual ComPort"
  79:Src/usbd_desc.c **** #define USBD_SERIALNUMBER_STRING_FS     "00000000001A"
  80:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "CDC Config"
  81:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "CDC Interface"
  82:Src/usbd_desc.c **** 
  83:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  84:Src/usbd_desc.c **** 
  85:Src/usbd_desc.c **** /* USER CODE END 0*/
  86:Src/usbd_desc.c **** /**
  87:Src/usbd_desc.c ****   * @}
  88:Src/usbd_desc.c ****   */ 
  89:Src/usbd_desc.c **** 
  90:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros
ARM GAS  /tmp/ccxv9hBW.s 			page 3


  91:Src/usbd_desc.c ****   * @{
  92:Src/usbd_desc.c ****   */ 
  93:Src/usbd_desc.c **** /**
  94:Src/usbd_desc.c ****   * @}
  95:Src/usbd_desc.c ****   */ 
  96:Src/usbd_desc.c **** 
  97:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables
  98:Src/usbd_desc.c ****   * @{
  99:Src/usbd_desc.c ****   */ 
 100:Src/usbd_desc.c **** uint8_t *     USBD_FS_DeviceDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
 101:Src/usbd_desc.c **** uint8_t *     USBD_FS_LangIDStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
 102:Src/usbd_desc.c **** uint8_t *     USBD_FS_ManufacturerStrDescriptor ( USBD_SpeedTypeDef speed , uint16_t *length);
 103:Src/usbd_desc.c **** uint8_t *     USBD_FS_ProductStrDescriptor ( USBD_SpeedTypeDef speed , uint16_t *length);
 104:Src/usbd_desc.c **** uint8_t *     USBD_FS_SerialStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
 105:Src/usbd_desc.c **** uint8_t *     USBD_FS_ConfigStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
 106:Src/usbd_desc.c **** uint8_t *     USBD_FS_InterfaceStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
 107:Src/usbd_desc.c **** 
 108:Src/usbd_desc.c **** #ifdef USB_SUPPORT_USER_STRING_DESC
 109:Src/usbd_desc.c **** uint8_t *     USBD_FS_USRStringDesc (USBD_SpeedTypeDef speed, uint8_t idx , uint16_t *length);  
 110:Src/usbd_desc.c **** #endif /* USB_SUPPORT_USER_STRING_DESC */  
 111:Src/usbd_desc.c **** 
 112:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 113:Src/usbd_desc.c **** {
 114:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor,
 115:Src/usbd_desc.c ****   USBD_FS_LangIDStrDescriptor, 
 116:Src/usbd_desc.c ****   USBD_FS_ManufacturerStrDescriptor,
 117:Src/usbd_desc.c ****   USBD_FS_ProductStrDescriptor,
 118:Src/usbd_desc.c ****   USBD_FS_SerialStrDescriptor,
 119:Src/usbd_desc.c ****   USBD_FS_ConfigStrDescriptor,
 120:Src/usbd_desc.c ****   USBD_FS_InterfaceStrDescriptor,
 121:Src/usbd_desc.c **** };
 122:Src/usbd_desc.c **** 
 123:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 124:Src/usbd_desc.c ****   #pragma data_alignment=4   
 125:Src/usbd_desc.c **** #endif
 126:Src/usbd_desc.c **** /* USB Standard Device Descriptor */
 127:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 128:Src/usbd_desc.c ****   {
 129:Src/usbd_desc.c ****     0x12,                       /*bLength */
 130:Src/usbd_desc.c ****     USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 131:Src/usbd_desc.c ****     0x00,                       /* bcdUSB */  
 132:Src/usbd_desc.c ****     0x02,
 133:Src/usbd_desc.c ****     0x02,                        /*bDeviceClass*/
 134:Src/usbd_desc.c ****     0x02,                       /*bDeviceSubClass*/
 135:Src/usbd_desc.c ****     0x00,                       /*bDeviceProtocol*/
 136:Src/usbd_desc.c ****     USB_MAX_EP0_SIZE,          /*bMaxPacketSize*/
 137:Src/usbd_desc.c ****     LOBYTE(USBD_VID),           /*idVendor*/
 138:Src/usbd_desc.c ****     HIBYTE(USBD_VID),           /*idVendor*/
 139:Src/usbd_desc.c ****     LOBYTE(USBD_PID_FS),           /*idVendor*/
 140:Src/usbd_desc.c ****     HIBYTE(USBD_PID_FS),           /*idVendor*/
 141:Src/usbd_desc.c ****     0x00,                       /*bcdDevice rel. 2.00*/
 142:Src/usbd_desc.c ****     0x02,
 143:Src/usbd_desc.c ****     USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 144:Src/usbd_desc.c ****     USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 145:Src/usbd_desc.c ****     USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 146:Src/usbd_desc.c ****     USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 147:Src/usbd_desc.c ****   } ; 
ARM GAS  /tmp/ccxv9hBW.s 			page 4


 148:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 149:Src/usbd_desc.c **** 
 150:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 151:Src/usbd_desc.c ****   #pragma data_alignment=4   
 152:Src/usbd_desc.c **** #endif
 153:Src/usbd_desc.c **** 
 154:Src/usbd_desc.c **** /* USB Standard Device Descriptor */
 155:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 156:Src/usbd_desc.c **** {
 157:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,         
 158:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,       
 159:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 160:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING), 
 161:Src/usbd_desc.c **** };
 162:Src/usbd_desc.c **** 
 163:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 164:Src/usbd_desc.c ****   #pragma data_alignment=4   
 165:Src/usbd_desc.c **** #endif
 166:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 167:Src/usbd_desc.c **** /**
 168:Src/usbd_desc.c ****   * @}
 169:Src/usbd_desc.c ****   */ 
 170:Src/usbd_desc.c **** 
 171:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes
 172:Src/usbd_desc.c ****   * @{
 173:Src/usbd_desc.c ****   */ 
 174:Src/usbd_desc.c **** /**
 175:Src/usbd_desc.c ****   * @}
 176:Src/usbd_desc.c ****   */ 
 177:Src/usbd_desc.c **** 
 178:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions
 179:Src/usbd_desc.c ****   * @{
 180:Src/usbd_desc.c ****   */ 
 181:Src/usbd_desc.c **** 
 182:Src/usbd_desc.c **** /**
 183:Src/usbd_desc.c **** * @brief  USBD_FS_DeviceDescriptor 
 184:Src/usbd_desc.c **** *         return the device descriptor
 185:Src/usbd_desc.c **** * @param  speed : current device speed
 186:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 187:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 188:Src/usbd_desc.c **** */
 189:Src/usbd_desc.c **** uint8_t *  USBD_FS_DeviceDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 190:Src/usbd_desc.c **** {
  26              		.loc 1 190 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 191:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  32              		.loc 1 191 0
  33 0000 1223     		movs	r3, #18
 192:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
 193:Src/usbd_desc.c **** }
  34              		.loc 1 193 0
  35 0002 0148     		ldr	r0, .L2
  36              	.LVL1:
ARM GAS  /tmp/ccxv9hBW.s 			page 5


 191:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  37              		.loc 1 191 0
  38 0004 0B80     		strh	r3, [r1]	@ movhi
  39              		.loc 1 193 0
  40 0006 7047     		bx	lr
  41              	.L3:
  42              		.align	2
  43              	.L2:
  44 0008 00000000 		.word	.LANCHOR0
  45              		.cfi_endproc
  46              	.LFE64:
  48              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  49              		.align	1
  50              		.global	USBD_FS_LangIDStrDescriptor
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu softvfp
  56              	USBD_FS_LangIDStrDescriptor:
  57              	.LFB65:
 194:Src/usbd_desc.c **** 
 195:Src/usbd_desc.c **** /**
 196:Src/usbd_desc.c **** * @brief  USBD_FS_LangIDStrDescriptor 
 197:Src/usbd_desc.c **** *         return the LangID string descriptor
 198:Src/usbd_desc.c **** * @param  speed : current device speed
 199:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 200:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 201:Src/usbd_desc.c **** */
 202:Src/usbd_desc.c **** uint8_t *  USBD_FS_LangIDStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 203:Src/usbd_desc.c **** {
  58              		.loc 1 203 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL2:
 204:Src/usbd_desc.c ****   *length =  sizeof(USBD_LangIDDesc);  
  64              		.loc 1 204 0
  65 0000 0423     		movs	r3, #4
 205:Src/usbd_desc.c ****   return USBD_LangIDDesc;
 206:Src/usbd_desc.c **** }
  66              		.loc 1 206 0
  67 0002 0148     		ldr	r0, .L5
  68              	.LVL3:
 204:Src/usbd_desc.c ****   *length =  sizeof(USBD_LangIDDesc);  
  69              		.loc 1 204 0
  70 0004 0B80     		strh	r3, [r1]	@ movhi
  71              		.loc 1 206 0
  72 0006 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 0008 00000000 		.word	.LANCHOR1
  77              		.cfi_endproc
  78              	.LFE65:
  80              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
  81              		.align	1
ARM GAS  /tmp/ccxv9hBW.s 			page 6


  82              		.global	USBD_FS_ManufacturerStrDescriptor
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu softvfp
  88              	USBD_FS_ManufacturerStrDescriptor:
  89              	.LFB67:
 207:Src/usbd_desc.c **** 
 208:Src/usbd_desc.c **** /**
 209:Src/usbd_desc.c **** * @brief  USBD_FS_ProductStrDescriptor 
 210:Src/usbd_desc.c **** *         return the product string descriptor
 211:Src/usbd_desc.c **** * @param  speed : current device speed
 212:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 213:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 214:Src/usbd_desc.c **** */
 215:Src/usbd_desc.c **** uint8_t *  USBD_FS_ProductStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 216:Src/usbd_desc.c **** {
 217:Src/usbd_desc.c ****   if(speed == 0)
 218:Src/usbd_desc.c ****   {   
 219:Src/usbd_desc.c ****     USBD_GetString (USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 220:Src/usbd_desc.c ****   }
 221:Src/usbd_desc.c ****   else
 222:Src/usbd_desc.c ****   {
 223:Src/usbd_desc.c ****     USBD_GetString (USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);    
 224:Src/usbd_desc.c ****   }
 225:Src/usbd_desc.c ****   return USBD_StrDesc;
 226:Src/usbd_desc.c **** }
 227:Src/usbd_desc.c **** 
 228:Src/usbd_desc.c **** /**
 229:Src/usbd_desc.c **** * @brief  USBD_FS_ManufacturerStrDescriptor 
 230:Src/usbd_desc.c **** *         return the manufacturer string descriptor
 231:Src/usbd_desc.c **** * @param  speed : current device speed
 232:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 233:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 234:Src/usbd_desc.c **** */
 235:Src/usbd_desc.c **** uint8_t *  USBD_FS_ManufacturerStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 236:Src/usbd_desc.c **** {
  90              		.loc 1 236 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              	.LVL4:
  95 0000 10B5     		push	{r4, lr}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 237:Src/usbd_desc.c ****   USBD_GetString (USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 100              		.loc 1 237 0
 101 0002 044C     		ldr	r4, .L8
 102 0004 0A46     		mov	r2, r1
 103 0006 0448     		ldr	r0, .L8+4
 104              	.LVL5:
 105 0008 2146     		mov	r1, r4
 106              	.LVL6:
 107 000a FFF7FEFF 		bl	USBD_GetString
 108              	.LVL7:
ARM GAS  /tmp/ccxv9hBW.s 			page 7


 238:Src/usbd_desc.c ****   return USBD_StrDesc;
 239:Src/usbd_desc.c **** }
 109              		.loc 1 239 0
 110 000e 2046     		mov	r0, r4
 111 0010 10BD     		pop	{r4, pc}
 112              	.L9:
 113 0012 00BF     		.align	2
 114              	.L8:
 115 0014 00000000 		.word	USBD_StrDesc
 116 0018 00000000 		.word	.LC0
 117              		.cfi_endproc
 118              	.LFE67:
 120              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
 121              		.align	1
 122              		.global	USBD_FS_ProductStrDescriptor
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu softvfp
 128              	USBD_FS_ProductStrDescriptor:
 129              	.LFB66:
 216:Src/usbd_desc.c ****   if(speed == 0)
 130              		.loc 1 216 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              	.LVL8:
 135 0000 10B5     		push	{r4, lr}
 136              	.LCFI1:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 4, -8
 139              		.cfi_offset 14, -4
 140              	.LBB4:
 141              	.LBB5:
 219:Src/usbd_desc.c ****   }
 142              		.loc 1 219 0
 143 0002 044C     		ldr	r4, .L11
 144 0004 0A46     		mov	r2, r1
 145 0006 0448     		ldr	r0, .L11+4
 146              	.LVL9:
 147 0008 2146     		mov	r1, r4
 148              	.LVL10:
 149 000a FFF7FEFF 		bl	USBD_GetString
 150              	.LVL11:
 151              	.LBE5:
 152              	.LBE4:
 226:Src/usbd_desc.c **** 
 153              		.loc 1 226 0
 154 000e 2046     		mov	r0, r4
 155 0010 10BD     		pop	{r4, pc}
 156              	.L12:
 157 0012 00BF     		.align	2
 158              	.L11:
 159 0014 00000000 		.word	USBD_StrDesc
 160 0018 00000000 		.word	.LC1
 161              		.cfi_endproc
 162              	.LFE66:
ARM GAS  /tmp/ccxv9hBW.s 			page 8


 164              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 165              		.align	1
 166              		.global	USBD_FS_SerialStrDescriptor
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu softvfp
 172              	USBD_FS_SerialStrDescriptor:
 173              	.LFB68:
 240:Src/usbd_desc.c **** 
 241:Src/usbd_desc.c **** /**
 242:Src/usbd_desc.c **** * @brief  USBD_FS_SerialStrDescriptor 
 243:Src/usbd_desc.c **** *         return the serial number string descriptor
 244:Src/usbd_desc.c **** * @param  speed : current device speed
 245:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 246:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 247:Src/usbd_desc.c **** */
 248:Src/usbd_desc.c **** uint8_t *  USBD_FS_SerialStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 249:Src/usbd_desc.c **** {
 174              		.loc 1 249 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              	.LVL12:
 179 0000 10B5     		push	{r4, lr}
 180              	.LCFI2:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 4, -8
 183              		.cfi_offset 14, -4
 184              	.LBB8:
 185              	.LBB9:
 250:Src/usbd_desc.c ****   if(speed  == USBD_SPEED_HIGH)
 251:Src/usbd_desc.c ****   {    
 252:Src/usbd_desc.c ****     USBD_GetString (USBD_SERIALNUMBER_STRING_FS, USBD_StrDesc, length);
 186              		.loc 1 252 0
 187 0002 044C     		ldr	r4, .L14
 188 0004 0A46     		mov	r2, r1
 189 0006 0448     		ldr	r0, .L14+4
 190              	.LVL13:
 191 0008 2146     		mov	r1, r4
 192              	.LVL14:
 193 000a FFF7FEFF 		bl	USBD_GetString
 194              	.LVL15:
 195              	.LBE9:
 196              	.LBE8:
 253:Src/usbd_desc.c ****   }
 254:Src/usbd_desc.c ****   else
 255:Src/usbd_desc.c ****   {
 256:Src/usbd_desc.c ****     USBD_GetString (USBD_SERIALNUMBER_STRING_FS, USBD_StrDesc, length);    
 257:Src/usbd_desc.c ****   }
 258:Src/usbd_desc.c ****   return USBD_StrDesc;
 259:Src/usbd_desc.c **** }
 197              		.loc 1 259 0
 198 000e 2046     		mov	r0, r4
 199 0010 10BD     		pop	{r4, pc}
 200              	.L15:
 201 0012 00BF     		.align	2
ARM GAS  /tmp/ccxv9hBW.s 			page 9


 202              	.L14:
 203 0014 00000000 		.word	USBD_StrDesc
 204 0018 00000000 		.word	.LC2
 205              		.cfi_endproc
 206              	.LFE68:
 208              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 209              		.align	1
 210              		.global	USBD_FS_ConfigStrDescriptor
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu softvfp
 216              	USBD_FS_ConfigStrDescriptor:
 217              	.LFB69:
 260:Src/usbd_desc.c **** 
 261:Src/usbd_desc.c **** /**
 262:Src/usbd_desc.c **** * @brief  USBD_FS_ConfigStrDescriptor 
 263:Src/usbd_desc.c **** *         return the configuration string descriptor
 264:Src/usbd_desc.c **** * @param  speed : current device speed
 265:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 266:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 267:Src/usbd_desc.c **** */
 268:Src/usbd_desc.c **** uint8_t *  USBD_FS_ConfigStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 269:Src/usbd_desc.c **** {
 218              		.loc 1 269 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              	.LVL16:
 223 0000 10B5     		push	{r4, lr}
 224              	.LCFI3:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
 228              	.LBB12:
 229              	.LBB13:
 270:Src/usbd_desc.c ****   if(speed  == USBD_SPEED_HIGH)
 271:Src/usbd_desc.c ****   {  
 272:Src/usbd_desc.c ****     USBD_GetString (USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 230              		.loc 1 272 0
 231 0002 044C     		ldr	r4, .L17
 232 0004 0A46     		mov	r2, r1
 233 0006 0448     		ldr	r0, .L17+4
 234              	.LVL17:
 235 0008 2146     		mov	r1, r4
 236              	.LVL18:
 237 000a FFF7FEFF 		bl	USBD_GetString
 238              	.LVL19:
 239              	.LBE13:
 240              	.LBE12:
 273:Src/usbd_desc.c ****   }
 274:Src/usbd_desc.c ****   else
 275:Src/usbd_desc.c ****   {
 276:Src/usbd_desc.c ****     USBD_GetString (USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length); 
 277:Src/usbd_desc.c ****   }
 278:Src/usbd_desc.c ****   return USBD_StrDesc;  
 279:Src/usbd_desc.c **** }
ARM GAS  /tmp/ccxv9hBW.s 			page 10


 241              		.loc 1 279 0
 242 000e 2046     		mov	r0, r4
 243 0010 10BD     		pop	{r4, pc}
 244              	.L18:
 245 0012 00BF     		.align	2
 246              	.L17:
 247 0014 00000000 		.word	USBD_StrDesc
 248 0018 00000000 		.word	.LC3
 249              		.cfi_endproc
 250              	.LFE69:
 252              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 253              		.align	1
 254              		.global	USBD_FS_InterfaceStrDescriptor
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu softvfp
 260              	USBD_FS_InterfaceStrDescriptor:
 261              	.LFB70:
 280:Src/usbd_desc.c **** 
 281:Src/usbd_desc.c **** /**
 282:Src/usbd_desc.c **** * @brief  USBD_HS_InterfaceStrDescriptor 
 283:Src/usbd_desc.c **** *         return the interface string descriptor
 284:Src/usbd_desc.c **** * @param  speed : current device speed
 285:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 286:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 287:Src/usbd_desc.c **** */
 288:Src/usbd_desc.c **** uint8_t *  USBD_FS_InterfaceStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 289:Src/usbd_desc.c **** {
 262              		.loc 1 289 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              	.LVL20:
 267 0000 10B5     		push	{r4, lr}
 268              	.LCFI4:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 4, -8
 271              		.cfi_offset 14, -4
 272              	.LBB16:
 273              	.LBB17:
 290:Src/usbd_desc.c ****   if(speed == 0)
 291:Src/usbd_desc.c ****   {
 292:Src/usbd_desc.c ****     USBD_GetString (USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 274              		.loc 1 292 0
 275 0002 044C     		ldr	r4, .L20
 276 0004 0A46     		mov	r2, r1
 277 0006 0448     		ldr	r0, .L20+4
 278              	.LVL21:
 279 0008 2146     		mov	r1, r4
 280              	.LVL22:
 281 000a FFF7FEFF 		bl	USBD_GetString
 282              	.LVL23:
 283              	.LBE17:
 284              	.LBE16:
 293:Src/usbd_desc.c ****   }
 294:Src/usbd_desc.c ****   else
ARM GAS  /tmp/ccxv9hBW.s 			page 11


 295:Src/usbd_desc.c ****   {
 296:Src/usbd_desc.c ****     USBD_GetString (USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 297:Src/usbd_desc.c ****   }
 298:Src/usbd_desc.c ****   return USBD_StrDesc;  
 299:Src/usbd_desc.c **** }
 285              		.loc 1 299 0
 286 000e 2046     		mov	r0, r4
 287 0010 10BD     		pop	{r4, pc}
 288              	.L21:
 289 0012 00BF     		.align	2
 290              	.L20:
 291 0014 00000000 		.word	USBD_StrDesc
 292 0018 00000000 		.word	.LC4
 293              		.cfi_endproc
 294              	.LFE70:
 296              		.comm	USBD_StrDesc,512,4
 297              		.global	USBD_LangIDDesc
 298              		.global	USBD_FS_DeviceDesc
 299              		.global	FS_Desc
 300              		.section	.data.FS_Desc,"aw",%progbits
 301              		.align	2
 304              	FS_Desc:
 305 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 306 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 307 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 308 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 309 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 310 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
 311 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 312              		.section	.data.USBD_FS_DeviceDesc,"aw",%progbits
 313              		.align	2
 314              		.set	.LANCHOR0,. + 0
 317              	USBD_FS_DeviceDesc:
 318 0000 12       		.byte	18
 319 0001 01       		.byte	1
 320 0002 00       		.byte	0
 321 0003 02       		.byte	2
 322 0004 02       		.byte	2
 323 0005 02       		.byte	2
 324 0006 00       		.byte	0
 325 0007 40       		.byte	64
 326 0008 83       		.byte	-125
 327 0009 04       		.byte	4
 328 000a 40       		.byte	64
 329 000b 57       		.byte	87
 330 000c 00       		.byte	0
 331 000d 02       		.byte	2
 332 000e 01       		.byte	1
 333 000f 02       		.byte	2
 334 0010 03       		.byte	3
 335 0011 01       		.byte	1
 336              		.section	.data.USBD_LangIDDesc,"aw",%progbits
 337              		.align	2
 338              		.set	.LANCHOR1,. + 0
 341              	USBD_LangIDDesc:
 342 0000 04       		.byte	4
 343 0001 03       		.byte	3
ARM GAS  /tmp/ccxv9hBW.s 			page 12


 344 0002 09       		.byte	9
 345 0003 04       		.byte	4
 346              		.section	.rodata.USBD_FS_ConfigStrDescriptor.str1.1,"aMS",%progbits,1
 347              	.LC3:
 348 0000 43444320 		.ascii	"CDC Config\000"
 348      436F6E66 
 348      696700
 349              		.section	.rodata.USBD_FS_InterfaceStrDescriptor.str1.1,"aMS",%progbits,1
 350              	.LC4:
 351 0000 43444320 		.ascii	"CDC Interface\000"
 351      496E7465 
 351      72666163 
 351      6500
 352              		.section	.rodata.USBD_FS_ManufacturerStrDescriptor.str1.1,"aMS",%progbits,1
 353              	.LC0:
 354 0000 53544D69 		.ascii	"STMicroelectronics\000"
 354      63726F65 
 354      6C656374 
 354      726F6E69 
 354      637300
 355              		.section	.rodata.USBD_FS_ProductStrDescriptor.str1.1,"aMS",%progbits,1
 356              	.LC1:
 357 0000 53544D33 		.ascii	"STM32 Virtual ComPort\000"
 357      32205669 
 357      72747561 
 357      6C20436F 
 357      6D506F72 
 358              		.section	.rodata.USBD_FS_SerialStrDescriptor.str1.1,"aMS",%progbits,1
 359              	.LC2:
 360 0000 30303030 		.ascii	"00000000001A\000"
 360      30303030 
 360      30303141 
 360      00
 361              		.text
 362              	.Letext0:
 363              		.file 2 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_default_types.h"
 364              		.file 3 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 365              		.file 4 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 366              		.file 5 "/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 367              		.file 6 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 368              		.file 7 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 369              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 370              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 371              		.file 10 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 372              		.file 11 "Inc/usbd_desc.h"
 373              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/ccxv9hBW.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
     /tmp/ccxv9hBW.s:16     .text.USBD_FS_DeviceDescriptor:0000000000000000 $t
     /tmp/ccxv9hBW.s:23     .text.USBD_FS_DeviceDescriptor:0000000000000000 USBD_FS_DeviceDescriptor
     /tmp/ccxv9hBW.s:44     .text.USBD_FS_DeviceDescriptor:0000000000000008 $d
     /tmp/ccxv9hBW.s:49     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 $t
     /tmp/ccxv9hBW.s:56     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 USBD_FS_LangIDStrDescriptor
     /tmp/ccxv9hBW.s:76     .text.USBD_FS_LangIDStrDescriptor:0000000000000008 $d
     /tmp/ccxv9hBW.s:81     .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/ccxv9hBW.s:88     .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/ccxv9hBW.s:115    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000014 $d
                            *COM*:0000000000000200 USBD_StrDesc
     /tmp/ccxv9hBW.s:121    .text.USBD_FS_ProductStrDescriptor:0000000000000000 $t
     /tmp/ccxv9hBW.s:128    .text.USBD_FS_ProductStrDescriptor:0000000000000000 USBD_FS_ProductStrDescriptor
     /tmp/ccxv9hBW.s:159    .text.USBD_FS_ProductStrDescriptor:0000000000000014 $d
     /tmp/ccxv9hBW.s:165    .text.USBD_FS_SerialStrDescriptor:0000000000000000 $t
     /tmp/ccxv9hBW.s:172    .text.USBD_FS_SerialStrDescriptor:0000000000000000 USBD_FS_SerialStrDescriptor
     /tmp/ccxv9hBW.s:203    .text.USBD_FS_SerialStrDescriptor:0000000000000014 $d
     /tmp/ccxv9hBW.s:209    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 $t
     /tmp/ccxv9hBW.s:216    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 USBD_FS_ConfigStrDescriptor
     /tmp/ccxv9hBW.s:247    .text.USBD_FS_ConfigStrDescriptor:0000000000000014 $d
     /tmp/ccxv9hBW.s:253    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/ccxv9hBW.s:260    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 USBD_FS_InterfaceStrDescriptor
     /tmp/ccxv9hBW.s:291    .text.USBD_FS_InterfaceStrDescriptor:0000000000000014 $d
     /tmp/ccxv9hBW.s:341    .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/ccxv9hBW.s:317    .data.USBD_FS_DeviceDesc:0000000000000000 USBD_FS_DeviceDesc
     /tmp/ccxv9hBW.s:304    .data.FS_Desc:0000000000000000 FS_Desc
     /tmp/ccxv9hBW.s:301    .data.FS_Desc:0000000000000000 $d
     /tmp/ccxv9hBW.s:313    .data.USBD_FS_DeviceDesc:0000000000000000 $d
     /tmp/ccxv9hBW.s:337    .data.USBD_LangIDDesc:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USBD_GetString
