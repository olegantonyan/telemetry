ARM GAS  /tmp/ccSnBx0I.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_conf.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_PCD_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_PCD_MspInit:
  24              	.LFB64:
  25              		.file 1 "Src/usbd_conf.c"
   1:Src/usbd_conf.c **** /**
   2:Src/usbd_conf.c ****   ******************************************************************************
   3:Src/usbd_conf.c ****   * @file           : usbd_conf.c
   4:Src/usbd_conf.c ****   * @version        : v2.0_Cube
   5:Src/usbd_conf.c ****   * @brief          : This file implements the board support package for the USB device library
   6:Src/usbd_conf.c ****   ******************************************************************************
   7:Src/usbd_conf.c ****   * This notice applies to any and all portions of this file
   8:Src/usbd_conf.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbd_conf.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbd_conf.c ****   * inserted by the user or by software development tools
  11:Src/usbd_conf.c ****   * are owned by their respective copyright owners.
  12:Src/usbd_conf.c ****   *
  13:Src/usbd_conf.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  14:Src/usbd_conf.c ****   * All rights reserved.
  15:Src/usbd_conf.c ****   *
  16:Src/usbd_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbd_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbd_conf.c ****   *
  19:Src/usbd_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbd_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbd_conf.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbd_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbd_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbd_conf.c ****   *    derived from this software without specific written permission.
  27:Src/usbd_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbd_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbd_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usbd_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbd_conf.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usbd_conf.c ****   *    this license. 
  33:Src/usbd_conf.c ****   *
ARM GAS  /tmp/ccSnBx0I.s 			page 2


  34:Src/usbd_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbd_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbd_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbd_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbd_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbd_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbd_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbd_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbd_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbd_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbd_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbd_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbd_conf.c ****   *
  47:Src/usbd_conf.c ****   ******************************************************************************
  48:Src/usbd_conf.c **** */
  49:Src/usbd_conf.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/usbd_conf.c **** #include "stm32f1xx.h"
  51:Src/usbd_conf.c **** #include "stm32f1xx_hal.h"
  52:Src/usbd_conf.c **** #include "usbd_def.h"
  53:Src/usbd_conf.c **** #include "usbd_core.h"
  54:Src/usbd_conf.c **** #include "usbd_cdc.h"
  55:Src/usbd_conf.c **** /* Private typedef -----------------------------------------------------------*/
  56:Src/usbd_conf.c **** /* Private define ------------------------------------------------------------*/
  57:Src/usbd_conf.c **** /* Private macro -------------------------------------------------------------*/
  58:Src/usbd_conf.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/usbd_conf.c **** PCD_HandleTypeDef hpcd_USB_FS;
  60:Src/usbd_conf.c **** void _Error_Handler(char * file, int line);
  61:Src/usbd_conf.c **** 
  62:Src/usbd_conf.c **** /* USER CODE BEGIN 0 */
  63:Src/usbd_conf.c **** /* USER CODE END 0 */
  64:Src/usbd_conf.c **** 
  65:Src/usbd_conf.c **** /* Private function prototypes -----------------------------------------------*/
  66:Src/usbd_conf.c **** /* Private functions ---------------------------------------------------------*/
  67:Src/usbd_conf.c **** /* USER CODE BEGIN 1 */
  68:Src/usbd_conf.c **** /* USER CODE END 1 */
  69:Src/usbd_conf.c **** void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state);
  70:Src/usbd_conf.c **** 
  71:Src/usbd_conf.c **** /*******************************************************************************
  72:Src/usbd_conf.c ****                        LL Driver Callbacks (PCD -> USB Device Library)
  73:Src/usbd_conf.c **** *******************************************************************************/
  74:Src/usbd_conf.c **** /* MSP Init */
  75:Src/usbd_conf.c **** 
  76:Src/usbd_conf.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
  77:Src/usbd_conf.c **** {
  26              		.loc 1 77 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 07B5     		push	{r0, r1, r2, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 14, -4
  78:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
  35              		.loc 1 78 0
  36 0002 0D4B     		ldr	r3, .L3
  37 0004 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccSnBx0I.s 			page 3


  38 0006 9A42     		cmp	r2, r3
  39 0008 12D1     		bne	.L1
  40              	.LBB2:
  79:Src/usbd_conf.c ****   {
  80:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 0 */
  81:Src/usbd_conf.c **** 
  82:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 0 */
  83:Src/usbd_conf.c ****     /* Peripheral clock enable */
  84:Src/usbd_conf.c ****     __HAL_RCC_USB_CLK_ENABLE();
  41              		.loc 1 84 0
  42 000a 03F5DA33 		add	r3, r3, #111616
  43 000e DA69     		ldr	r2, [r3, #28]
  44              	.LBE2:
  85:Src/usbd_conf.c **** 
  86:Src/usbd_conf.c ****     /* Peripheral interrupt init */
  87:Src/usbd_conf.c ****     HAL_NVIC_SetPriority(USB_LP_CAN1_RX0_IRQn, 5, 0);
  45              		.loc 1 87 0
  46 0010 1420     		movs	r0, #20
  47              	.LVL1:
  48              	.LBB3:
  84:Src/usbd_conf.c **** 
  49              		.loc 1 84 0
  50 0012 42F40002 		orr	r2, r2, #8388608
  51 0016 DA61     		str	r2, [r3, #28]
  52 0018 DB69     		ldr	r3, [r3, #28]
  53              	.LBE3:
  54              		.loc 1 87 0
  55 001a 0022     		movs	r2, #0
  56              	.LBB4:
  84:Src/usbd_conf.c **** 
  57              		.loc 1 84 0
  58 001c 03F40003 		and	r3, r3, #8388608
  59 0020 0193     		str	r3, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 87 0
  62 0022 0521     		movs	r1, #5
  63              	.LBB5:
  84:Src/usbd_conf.c **** 
  64              		.loc 1 84 0
  65 0024 019B     		ldr	r3, [sp, #4]
  66              	.LBE5:
  67              		.loc 1 87 0
  68 0026 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  69              	.LVL2:
  88:Src/usbd_conf.c ****     HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
  70              		.loc 1 88 0
  71 002a 1420     		movs	r0, #20
  72 002c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  73              	.LVL3:
  74              	.L1:
  89:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspInit 1 */
  90:Src/usbd_conf.c **** 
  91:Src/usbd_conf.c ****   /* USER CODE END USB_MspInit 1 */
  92:Src/usbd_conf.c ****   }
  93:Src/usbd_conf.c **** }
  75              		.loc 1 93 0
  76 0030 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccSnBx0I.s 			page 4


  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 4
  79              		@ sp needed
  80 0032 5DF804FB 		ldr	pc, [sp], #4
  81              	.L4:
  82 0036 00BF     		.align	2
  83              	.L3:
  84 0038 005C0040 		.word	1073765376
  85              		.cfi_endproc
  86              	.LFE64:
  88              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
  89              		.align	1
  90              		.global	HAL_PCD_MspDeInit
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu softvfp
  96              	HAL_PCD_MspDeInit:
  97              	.LFB65:
  94:Src/usbd_conf.c **** 
  95:Src/usbd_conf.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef* pcdHandle)
  96:Src/usbd_conf.c **** {
  98              		.loc 1 96 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.LVL4:
  97:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB)
 104              		.loc 1 97 0
 105 0000 0268     		ldr	r2, [r0]
 106 0002 064B     		ldr	r3, .L7
 107 0004 9A42     		cmp	r2, r3
 108 0006 07D1     		bne	.L5
  98:Src/usbd_conf.c ****   {
  99:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 0 */
 100:Src/usbd_conf.c **** 
 101:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 0 */
 102:Src/usbd_conf.c ****     /* Peripheral clock disable */
 103:Src/usbd_conf.c ****     __HAL_RCC_USB_CLK_DISABLE();
 109              		.loc 1 103 0
 110 0008 054A     		ldr	r2, .L7+4
 104:Src/usbd_conf.c **** 
 105:Src/usbd_conf.c ****     /* Peripheral interrupt Deinit*/
 106:Src/usbd_conf.c ****     HAL_NVIC_DisableIRQ(USB_LP_CAN1_RX0_IRQn);
 111              		.loc 1 106 0
 112 000a 1420     		movs	r0, #20
 113              	.LVL5:
 103:Src/usbd_conf.c **** 
 114              		.loc 1 103 0
 115 000c D369     		ldr	r3, [r2, #28]
 116 000e 23F40003 		bic	r3, r3, #8388608
 117 0012 D361     		str	r3, [r2, #28]
 118              		.loc 1 106 0
 119 0014 FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 120              	.LVL6:
 121              	.L5:
ARM GAS  /tmp/ccSnBx0I.s 			page 5


 122 0018 7047     		bx	lr
 123              	.L8:
 124 001a 00BF     		.align	2
 125              	.L7:
 126 001c 005C0040 		.word	1073765376
 127 0020 00100240 		.word	1073876992
 128              		.cfi_endproc
 129              	.LFE65:
 131              		.section	.text.HAL_PCD_SetupStageCallback,"ax",%progbits
 132              		.align	1
 133              		.global	HAL_PCD_SetupStageCallback
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu softvfp
 139              	HAL_PCD_SetupStageCallback:
 140              	.LFB66:
 107:Src/usbd_conf.c **** 
 108:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_MspDeInit 1 */
 109:Src/usbd_conf.c **** 
 110:Src/usbd_conf.c ****   /* USER CODE END USB_MspDeInit 1 */
 111:Src/usbd_conf.c ****   }
 112:Src/usbd_conf.c **** }
 113:Src/usbd_conf.c **** 
 114:Src/usbd_conf.c **** /**
 115:Src/usbd_conf.c ****   * @brief  Setup Stage callback
 116:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 117:Src/usbd_conf.c ****   * @retval None
 118:Src/usbd_conf.c ****   */
 119:Src/usbd_conf.c **** void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 120:Src/usbd_conf.c **** {
 141              		.loc 1 120 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146              	.LVL7:
 121:Src/usbd_conf.c ****   USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 147              		.loc 1 121 0
 148 0000 00F57B71 		add	r1, r0, #1004
 149 0004 D0F81C04 		ldr	r0, [r0, #1052]
 150              	.LVL8:
 151 0008 FFF7FEBF 		b	USBD_LL_SetupStage
 152              	.LVL9:
 153              		.cfi_endproc
 154              	.LFE66:
 156              		.section	.text.HAL_PCD_DataOutStageCallback,"ax",%progbits
 157              		.align	1
 158              		.global	HAL_PCD_DataOutStageCallback
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	HAL_PCD_DataOutStageCallback:
 165              	.LFB67:
 122:Src/usbd_conf.c **** }
 123:Src/usbd_conf.c **** 
ARM GAS  /tmp/ccSnBx0I.s 			page 6


 124:Src/usbd_conf.c **** /**
 125:Src/usbd_conf.c ****   * @brief  Data Out Stage callback.
 126:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 127:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 128:Src/usbd_conf.c ****   * @retval None
 129:Src/usbd_conf.c ****   */
 130:Src/usbd_conf.c **** void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 131:Src/usbd_conf.c **** {
 166              		.loc 1 131 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171              	.LVL10:
 132:Src/usbd_conf.c ****   USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 172              		.loc 1 132 0
 173 0000 00EB4113 		add	r3, r0, r1, lsl #5
 174 0004 D3F81C22 		ldr	r2, [r3, #540]
 175 0008 D0F81C04 		ldr	r0, [r0, #1052]
 176              	.LVL11:
 177 000c FFF7FEBF 		b	USBD_LL_DataOutStage
 178              	.LVL12:
 179              		.cfi_endproc
 180              	.LFE67:
 182              		.section	.text.HAL_PCD_DataInStageCallback,"ax",%progbits
 183              		.align	1
 184              		.global	HAL_PCD_DataInStageCallback
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu softvfp
 190              	HAL_PCD_DataInStageCallback:
 191              	.LFB68:
 133:Src/usbd_conf.c **** }
 134:Src/usbd_conf.c **** 
 135:Src/usbd_conf.c **** /**
 136:Src/usbd_conf.c ****   * @brief  Data In Stage callback..
 137:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 138:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 139:Src/usbd_conf.c ****   * @retval None
 140:Src/usbd_conf.c ****   */
 141:Src/usbd_conf.c **** void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 142:Src/usbd_conf.c **** {
 192              		.loc 1 142 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LVL13:
 143:Src/usbd_conf.c ****   USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 198              		.loc 1 143 0
 199 0000 00EB4113 		add	r3, r0, r1, lsl #5
 200 0004 DA6B     		ldr	r2, [r3, #60]
 201 0006 D0F81C04 		ldr	r0, [r0, #1052]
 202              	.LVL14:
 203 000a FFF7FEBF 		b	USBD_LL_DataInStage
 204              	.LVL15:
ARM GAS  /tmp/ccSnBx0I.s 			page 7


 205              		.cfi_endproc
 206              	.LFE68:
 208              		.section	.text.HAL_PCD_SOFCallback,"ax",%progbits
 209              		.align	1
 210              		.global	HAL_PCD_SOFCallback
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu softvfp
 216              	HAL_PCD_SOFCallback:
 217              	.LFB69:
 144:Src/usbd_conf.c **** }
 145:Src/usbd_conf.c **** 
 146:Src/usbd_conf.c **** /**
 147:Src/usbd_conf.c ****   * @brief  SOF callback.
 148:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 149:Src/usbd_conf.c ****   * @retval None
 150:Src/usbd_conf.c ****   */
 151:Src/usbd_conf.c **** void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 152:Src/usbd_conf.c **** {
 218              		.loc 1 152 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223              	.LVL16:
 153:Src/usbd_conf.c ****   USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 224              		.loc 1 153 0
 225 0000 D0F81C04 		ldr	r0, [r0, #1052]
 226              	.LVL17:
 227 0004 FFF7FEBF 		b	USBD_LL_SOF
 228              	.LVL18:
 229              		.cfi_endproc
 230              	.LFE69:
 232              		.section	.text.HAL_PCD_ResetCallback,"ax",%progbits
 233              		.align	1
 234              		.global	HAL_PCD_ResetCallback
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu softvfp
 240              	HAL_PCD_ResetCallback:
 241              	.LFB70:
 154:Src/usbd_conf.c **** }
 155:Src/usbd_conf.c **** 
 156:Src/usbd_conf.c **** /**
 157:Src/usbd_conf.c ****   * @brief  Reset callback.
 158:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 159:Src/usbd_conf.c ****   * @retval None
 160:Src/usbd_conf.c ****   */
 161:Src/usbd_conf.c **** void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 162:Src/usbd_conf.c **** { 
 242              		.loc 1 162 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              	.LVL19:
ARM GAS  /tmp/ccSnBx0I.s 			page 8


 247 0000 10B5     		push	{r4, lr}
 248              	.LCFI2:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 4, -8
 251              		.cfi_offset 14, -4
 252              		.loc 1 162 0
 253 0002 0446     		mov	r4, r0
 163:Src/usbd_conf.c ****   USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 164:Src/usbd_conf.c **** 
 165:Src/usbd_conf.c ****   /*Set USB Current Speed*/
 166:Src/usbd_conf.c ****   switch (hpcd->Init.speed)
 167:Src/usbd_conf.c ****   {
 168:Src/usbd_conf.c ****   case PCD_SPEED_FULL:
 169:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;    
 170:Src/usbd_conf.c ****     break;
 171:Src/usbd_conf.c **** 	
 172:Src/usbd_conf.c ****   default:
 173:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;    
 174:Src/usbd_conf.c ****     break;    
 175:Src/usbd_conf.c ****   }
 176:Src/usbd_conf.c ****   USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);  
 254              		.loc 1 176 0
 255 0004 0121     		movs	r1, #1
 256 0006 D0F81C04 		ldr	r0, [r0, #1052]
 257              	.LVL20:
 258 000a FFF7FEFF 		bl	USBD_LL_SetSpeed
 259              	.LVL21:
 177:Src/usbd_conf.c ****   
 178:Src/usbd_conf.c ****   /*Reset Device*/
 179:Src/usbd_conf.c ****   USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 260              		.loc 1 179 0
 261 000e D4F81C04 		ldr	r0, [r4, #1052]
 180:Src/usbd_conf.c **** }
 262              		.loc 1 180 0
 263 0012 BDE81040 		pop	{r4, lr}
 264              	.LCFI3:
 265              		.cfi_restore 14
 266              		.cfi_restore 4
 267              		.cfi_def_cfa_offset 0
 268              	.LVL22:
 179:Src/usbd_conf.c **** }
 269              		.loc 1 179 0
 270 0016 FFF7FEBF 		b	USBD_LL_Reset
 271              	.LVL23:
 272              		.cfi_endproc
 273              	.LFE70:
 275              		.section	.text.HAL_PCD_SuspendCallback,"ax",%progbits
 276              		.align	1
 277              		.global	HAL_PCD_SuspendCallback
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu softvfp
 283              	HAL_PCD_SuspendCallback:
 284              	.LFB71:
 181:Src/usbd_conf.c **** 
 182:Src/usbd_conf.c **** /**
ARM GAS  /tmp/ccSnBx0I.s 			page 9


 183:Src/usbd_conf.c ****   * @brief  Suspend callback.
 184:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 185:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 186:Src/usbd_conf.c ****   * @retval None
 187:Src/usbd_conf.c ****   */
 188:Src/usbd_conf.c **** void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 189:Src/usbd_conf.c **** {
 285              		.loc 1 189 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              	.LVL24:
 290 0000 10B5     		push	{r4, lr}
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 4, -8
 294              		.cfi_offset 14, -4
 295              		.loc 1 189 0
 296 0002 0446     		mov	r4, r0
 190:Src/usbd_conf.c ****   /* Inform USB library that core enters in suspend Mode */
 191:Src/usbd_conf.c ****   USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 297              		.loc 1 191 0
 298 0004 D0F81C04 		ldr	r0, [r0, #1052]
 299              	.LVL25:
 300 0008 FFF7FEFF 		bl	USBD_LL_Suspend
 301              	.LVL26:
 192:Src/usbd_conf.c ****   /*Enter in STOP mode */
 193:Src/usbd_conf.c ****   /* USER CODE BEGIN 2 */  
 194:Src/usbd_conf.c ****   if (hpcd->Init.low_power_enable)
 302              		.loc 1 194 0
 303 000c A369     		ldr	r3, [r4, #24]
 304 000e 23B1     		cbz	r3, .L14
 195:Src/usbd_conf.c ****   {
 196:Src/usbd_conf.c ****     /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register */
 197:Src/usbd_conf.c ****     SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 305              		.loc 1 197 0
 306 0010 024A     		ldr	r2, .L19
 307 0012 1369     		ldr	r3, [r2, #16]
 308 0014 43F00603 		orr	r3, r3, #6
 309 0018 1361     		str	r3, [r2, #16]
 310              	.L14:
 311 001a 10BD     		pop	{r4, pc}
 312              	.LVL27:
 313              	.L20:
 314              		.align	2
 315              	.L19:
 316 001c 00ED00E0 		.word	-536810240
 317              		.cfi_endproc
 318              	.LFE71:
 320              		.section	.text.HAL_PCD_ResumeCallback,"ax",%progbits
 321              		.align	1
 322              		.global	HAL_PCD_ResumeCallback
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu softvfp
 328              	HAL_PCD_ResumeCallback:
ARM GAS  /tmp/ccSnBx0I.s 			page 10


 329              	.LFB72:
 198:Src/usbd_conf.c ****   }
 199:Src/usbd_conf.c ****   /* USER CODE END 2 */
 200:Src/usbd_conf.c **** }
 201:Src/usbd_conf.c **** 
 202:Src/usbd_conf.c **** /**
 203:Src/usbd_conf.c ****   * @brief  Resume callback.
 204:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 205:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 206:Src/usbd_conf.c ****   * @retval None
 207:Src/usbd_conf.c ****   */
 208:Src/usbd_conf.c **** void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 209:Src/usbd_conf.c **** {
 330              		.loc 1 209 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335              	.LVL28:
 210:Src/usbd_conf.c ****   /* USER CODE BEGIN 3 */
 211:Src/usbd_conf.c ****   /* USER CODE END 3 */
 212:Src/usbd_conf.c ****   USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 336              		.loc 1 212 0
 337 0000 D0F81C04 		ldr	r0, [r0, #1052]
 338              	.LVL29:
 339 0004 FFF7FEBF 		b	USBD_LL_Resume
 340              	.LVL30:
 341              		.cfi_endproc
 342              	.LFE72:
 344              		.section	.text.HAL_PCD_ISOOUTIncompleteCallback,"ax",%progbits
 345              		.align	1
 346              		.global	HAL_PCD_ISOOUTIncompleteCallback
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu softvfp
 352              	HAL_PCD_ISOOUTIncompleteCallback:
 353              	.LFB73:
 213:Src/usbd_conf.c ****   
 214:Src/usbd_conf.c **** }
 215:Src/usbd_conf.c **** 
 216:Src/usbd_conf.c **** /**
 217:Src/usbd_conf.c ****   * @brief  ISOOUTIncomplete callback.
 218:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 219:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 220:Src/usbd_conf.c ****   * @retval None
 221:Src/usbd_conf.c ****   */
 222:Src/usbd_conf.c **** void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 223:Src/usbd_conf.c **** {
 354              		.loc 1 223 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359              	.LVL31:
 224:Src/usbd_conf.c ****   USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 360              		.loc 1 224 0
ARM GAS  /tmp/ccSnBx0I.s 			page 11


 361 0000 D0F81C04 		ldr	r0, [r0, #1052]
 362              	.LVL32:
 363 0004 FFF7FEBF 		b	USBD_LL_IsoOUTIncomplete
 364              	.LVL33:
 365              		.cfi_endproc
 366              	.LFE73:
 368              		.section	.text.HAL_PCD_ISOINIncompleteCallback,"ax",%progbits
 369              		.align	1
 370              		.global	HAL_PCD_ISOINIncompleteCallback
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu softvfp
 376              	HAL_PCD_ISOINIncompleteCallback:
 377              	.LFB74:
 225:Src/usbd_conf.c **** }
 226:Src/usbd_conf.c **** 
 227:Src/usbd_conf.c **** /**
 228:Src/usbd_conf.c ****   * @brief  ISOINIncomplete callback.
 229:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 230:Src/usbd_conf.c ****   * @param  epnum: Endpoint Number
 231:Src/usbd_conf.c ****   * @retval None
 232:Src/usbd_conf.c ****   */
 233:Src/usbd_conf.c **** void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 234:Src/usbd_conf.c **** {
 378              		.loc 1 234 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383              	.LVL34:
 235:Src/usbd_conf.c ****   USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 384              		.loc 1 235 0
 385 0000 D0F81C04 		ldr	r0, [r0, #1052]
 386              	.LVL35:
 387 0004 FFF7FEBF 		b	USBD_LL_IsoINIncomplete
 388              	.LVL36:
 389              		.cfi_endproc
 390              	.LFE74:
 392              		.section	.text.HAL_PCD_ConnectCallback,"ax",%progbits
 393              		.align	1
 394              		.global	HAL_PCD_ConnectCallback
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu softvfp
 400              	HAL_PCD_ConnectCallback:
 401              	.LFB75:
 236:Src/usbd_conf.c **** }
 237:Src/usbd_conf.c **** 
 238:Src/usbd_conf.c **** /**
 239:Src/usbd_conf.c ****   * @brief  ConnectCallback callback.
 240:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 241:Src/usbd_conf.c ****   * @retval None
 242:Src/usbd_conf.c ****   */
 243:Src/usbd_conf.c **** void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 244:Src/usbd_conf.c **** {
ARM GAS  /tmp/ccSnBx0I.s 			page 12


 402              		.loc 1 244 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407              	.LVL37:
 245:Src/usbd_conf.c ****   USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 408              		.loc 1 245 0
 409 0000 D0F81C04 		ldr	r0, [r0, #1052]
 410              	.LVL38:
 411 0004 FFF7FEBF 		b	USBD_LL_DevConnected
 412              	.LVL39:
 413              		.cfi_endproc
 414              	.LFE75:
 416              		.section	.text.HAL_PCD_DisconnectCallback,"ax",%progbits
 417              		.align	1
 418              		.global	HAL_PCD_DisconnectCallback
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu softvfp
 424              	HAL_PCD_DisconnectCallback:
 425              	.LFB76:
 246:Src/usbd_conf.c **** }
 247:Src/usbd_conf.c **** 
 248:Src/usbd_conf.c **** /**
 249:Src/usbd_conf.c ****   * @brief  Disconnect callback.
 250:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 251:Src/usbd_conf.c ****   * @retval None
 252:Src/usbd_conf.c ****   */
 253:Src/usbd_conf.c **** void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 254:Src/usbd_conf.c **** {
 426              		.loc 1 254 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 431              	.LVL40:
 255:Src/usbd_conf.c ****   USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 432              		.loc 1 255 0
 433 0000 D0F81C04 		ldr	r0, [r0, #1052]
 434              	.LVL41:
 435 0004 FFF7FEBF 		b	USBD_LL_DevDisconnected
 436              	.LVL42:
 437              		.cfi_endproc
 438              	.LFE76:
 440              		.section	.text.USBD_LL_Init,"ax",%progbits
 441              		.align	1
 442              		.global	USBD_LL_Init
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu softvfp
 448              	USBD_LL_Init:
 449              	.LFB77:
 256:Src/usbd_conf.c **** }
 257:Src/usbd_conf.c **** 
ARM GAS  /tmp/ccSnBx0I.s 			page 13


 258:Src/usbd_conf.c **** /*******************************************************************************
 259:Src/usbd_conf.c ****                        LL Driver Interface (USB Device Library --> PCD)
 260:Src/usbd_conf.c **** *******************************************************************************/
 261:Src/usbd_conf.c **** /**
 262:Src/usbd_conf.c ****   * @brief  Initializes the Low Level portion of the Device driver.
 263:Src/usbd_conf.c ****   * @param  pdev: Device handle
 264:Src/usbd_conf.c ****   * @retval USBD Status
 265:Src/usbd_conf.c ****   */
 266:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Init (USBD_HandleTypeDef *pdev)
 267:Src/usbd_conf.c **** { 
 450              		.loc 1 267 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              	.LVL43:
 455 0000 10B5     		push	{r4, lr}
 456              	.LCFI5:
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 4, -8
 459              		.cfi_offset 14, -4
 268:Src/usbd_conf.c ****   /* Init USB_IP */
 269:Src/usbd_conf.c ****   /* Link The driver to the stack */
 270:Src/usbd_conf.c ****   hpcd_USB_FS.pData = pdev;
 271:Src/usbd_conf.c ****   pdev->pData = &hpcd_USB_FS;
 272:Src/usbd_conf.c **** 
 273:Src/usbd_conf.c ****   hpcd_USB_FS.Instance = USB;
 274:Src/usbd_conf.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 275:Src/usbd_conf.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 276:Src/usbd_conf.c ****   hpcd_USB_FS.Init.ep0_mps = DEP0CTL_MPS_8;
 460              		.loc 1 276 0
 461 0002 0223     		movs	r3, #2
 462 0004 0822     		movs	r2, #8
 463 0006 4FF0030E 		mov	lr, #3
 267:Src/usbd_conf.c ****   /* Init USB_IP */
 464              		.loc 1 267 0
 465 000a 0446     		mov	r4, r0
 466              		.loc 1 276 0
 467 000c 1D49     		ldr	r1, .L31
 270:Src/usbd_conf.c ****   pdev->pData = &hpcd_USB_FS;
 468              		.loc 1 270 0
 469 000e 1E48     		ldr	r0, .L31+4
 470              	.LVL44:
 471              		.loc 1 276 0
 472 0010 80E80E40 		stm	r0, {r1, r2, r3, lr}
 277:Src/usbd_conf.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 473              		.loc 1 277 0
 474 0014 0023     		movs	r3, #0
 270:Src/usbd_conf.c ****   pdev->pData = &hpcd_USB_FS;
 475              		.loc 1 270 0
 476 0016 C0F81C44 		str	r4, [r0, #1052]
 271:Src/usbd_conf.c **** 
 477              		.loc 1 271 0
 478 001a C4F82002 		str	r0, [r4, #544]
 479              		.loc 1 277 0
 480 001e 8361     		str	r3, [r0, #24]
 278:Src/usbd_conf.c ****   hpcd_USB_FS.Init.lpm_enable = DISABLE;
 481              		.loc 1 278 0
ARM GAS  /tmp/ccSnBx0I.s 			page 14


 482 0020 C361     		str	r3, [r0, #28]
 279:Src/usbd_conf.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 483              		.loc 1 279 0
 484 0022 0362     		str	r3, [r0, #32]
 280:Src/usbd_conf.c ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 485              		.loc 1 280 0
 486 0024 FFF7FEFF 		bl	HAL_PCD_Init
 487              	.LVL45:
 488 0028 20B1     		cbz	r0, .L27
 281:Src/usbd_conf.c ****   {
 282:Src/usbd_conf.c ****     _Error_Handler(__FILE__, __LINE__);
 489              		.loc 1 282 0
 490 002a 4FF48D71 		mov	r1, #282
 491 002e 1748     		ldr	r0, .L31+8
 492 0030 FFF7FEFF 		bl	_Error_Handler
 493              	.LVL46:
 494              	.L27:
 283:Src/usbd_conf.c ****   }
 284:Src/usbd_conf.c **** 
 285:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 495              		.loc 1 285 0
 496 0034 0022     		movs	r2, #0
 497 0036 1823     		movs	r3, #24
 498 0038 1146     		mov	r1, r2
 499 003a D4F82002 		ldr	r0, [r4, #544]
 500 003e FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 501              	.LVL47:
 286:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 502              		.loc 1 286 0
 503 0042 5823     		movs	r3, #88
 504 0044 0022     		movs	r2, #0
 505 0046 8021     		movs	r1, #128
 506 0048 D4F82002 		ldr	r0, [r4, #544]
 507 004c FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 508              	.LVL48:
 287:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x81 , PCD_SNG_BUF, 0xC0);  
 509              		.loc 1 287 0
 510 0050 C023     		movs	r3, #192
 511 0052 0022     		movs	r2, #0
 512 0054 8121     		movs	r1, #129
 513 0056 D4F82002 		ldr	r0, [r4, #544]
 514 005a FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 515              	.LVL49:
 288:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x01 , PCD_SNG_BUF, 0x110);
 516              		.loc 1 288 0
 517 005e 4FF48873 		mov	r3, #272
 518 0062 0022     		movs	r2, #0
 519 0064 0121     		movs	r1, #1
 520 0066 D4F82002 		ldr	r0, [r4, #544]
 521 006a FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 522              	.LVL50:
 289:Src/usbd_conf.c ****   HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x82 , PCD_SNG_BUF, 0x100);  
 523              		.loc 1 289 0
 524 006e 4FF48073 		mov	r3, #256
 525 0072 0022     		movs	r2, #0
 526 0074 8221     		movs	r1, #130
 527 0076 D4F82002 		ldr	r0, [r4, #544]
ARM GAS  /tmp/ccSnBx0I.s 			page 15


 528 007a FFF7FEFF 		bl	HAL_PCDEx_PMAConfig
 529              	.LVL51:
 290:Src/usbd_conf.c ****   return USBD_OK;
 291:Src/usbd_conf.c **** }
 530              		.loc 1 291 0
 531 007e 0020     		movs	r0, #0
 532 0080 10BD     		pop	{r4, pc}
 533              	.LVL52:
 534              	.L32:
 535 0082 00BF     		.align	2
 536              	.L31:
 537 0084 005C0040 		.word	1073765376
 538 0088 00000000 		.word	hpcd_USB_FS
 539 008c 00000000 		.word	.LC0
 540              		.cfi_endproc
 541              	.LFE77:
 543              		.section	.text.USBD_LL_DeInit,"ax",%progbits
 544              		.align	1
 545              		.global	USBD_LL_DeInit
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 549              		.fpu softvfp
 551              	USBD_LL_DeInit:
 552              	.LFB78:
 292:Src/usbd_conf.c **** 
 293:Src/usbd_conf.c **** /**
 294:Src/usbd_conf.c ****   * @brief  De-Initializes the Low Level portion of the Device driver.
 295:Src/usbd_conf.c ****   * @param  pdev: Device handle
 296:Src/usbd_conf.c ****   * @retval USBD Status
 297:Src/usbd_conf.c ****   */
 298:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_DeInit (USBD_HandleTypeDef *pdev)
 299:Src/usbd_conf.c **** {
 553              		.loc 1 299 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              	.LVL53:
 558 0000 08B5     		push	{r3, lr}
 559              	.LCFI6:
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 3, -8
 562              		.cfi_offset 14, -4
 300:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 301:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 302:Src/usbd_conf.c ****  
 303:Src/usbd_conf.c ****   hal_status = HAL_PCD_DeInit(pdev->pData);
 563              		.loc 1 303 0
 564 0002 D0F82002 		ldr	r0, [r0, #544]
 565              	.LVL54:
 566 0006 FFF7FEFF 		bl	HAL_PCD_DeInit
 567              	.LVL55:
 568 000a 0328     		cmp	r0, #3
 569 000c 9ABF     		itte	ls
 570 000e 024B     		ldrls	r3, .L36
 571 0010 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 572              	.LVL56:
ARM GAS  /tmp/ccSnBx0I.s 			page 16


 573 0012 0220     		movhi	r0, #2
 574              	.LVL57:
 304:Src/usbd_conf.c ****      
 305:Src/usbd_conf.c ****   switch (hal_status) {
 306:Src/usbd_conf.c ****     case HAL_OK :
 307:Src/usbd_conf.c ****       usb_status = USBD_OK;
 308:Src/usbd_conf.c ****     break;
 309:Src/usbd_conf.c ****     case HAL_ERROR :
 310:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 311:Src/usbd_conf.c ****     break;
 312:Src/usbd_conf.c ****     case HAL_BUSY :
 313:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 314:Src/usbd_conf.c ****     break;
 315:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 316:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 317:Src/usbd_conf.c ****     break;
 318:Src/usbd_conf.c ****     default :
 319:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 320:Src/usbd_conf.c ****     break;
 321:Src/usbd_conf.c ****   }
 322:Src/usbd_conf.c ****   return usb_status; 
 323:Src/usbd_conf.c **** }
 575              		.loc 1 323 0
 576 0014 08BD     		pop	{r3, pc}
 577              	.L37:
 578 0016 00BF     		.align	2
 579              	.L36:
 580 0018 00000000 		.word	CSWTCH.18
 581              		.cfi_endproc
 582              	.LFE78:
 584              		.section	.text.USBD_LL_Start,"ax",%progbits
 585              		.align	1
 586              		.global	USBD_LL_Start
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu softvfp
 592              	USBD_LL_Start:
 593              	.LFB79:
 324:Src/usbd_conf.c **** 
 325:Src/usbd_conf.c **** /**
 326:Src/usbd_conf.c ****   * @brief  Starts the Low Level portion of the Device driver. 
 327:Src/usbd_conf.c ****   * @param  pdev: Device handle
 328:Src/usbd_conf.c ****   * @retval USBD Status
 329:Src/usbd_conf.c ****   */
 330:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Start(USBD_HandleTypeDef *pdev)
 331:Src/usbd_conf.c **** {
 594              		.loc 1 331 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              	.LVL58:
 599 0000 08B5     		push	{r3, lr}
 600              	.LCFI7:
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 3, -8
 603              		.cfi_offset 14, -4
ARM GAS  /tmp/ccSnBx0I.s 			page 17


 332:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 333:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 334:Src/usbd_conf.c ****  
 335:Src/usbd_conf.c ****   hal_status = HAL_PCD_Start(pdev->pData);
 604              		.loc 1 335 0
 605 0002 D0F82002 		ldr	r0, [r0, #544]
 606              	.LVL59:
 607 0006 FFF7FEFF 		bl	HAL_PCD_Start
 608              	.LVL60:
 609 000a 0328     		cmp	r0, #3
 610 000c 9ABF     		itte	ls
 611 000e 024B     		ldrls	r3, .L41
 612 0010 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 613              	.LVL61:
 614 0012 0220     		movhi	r0, #2
 615              	.LVL62:
 336:Src/usbd_conf.c ****      
 337:Src/usbd_conf.c ****   switch (hal_status) {
 338:Src/usbd_conf.c ****     case HAL_OK :
 339:Src/usbd_conf.c ****       usb_status = USBD_OK;
 340:Src/usbd_conf.c ****     break;
 341:Src/usbd_conf.c ****     case HAL_ERROR :
 342:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 343:Src/usbd_conf.c ****     break;
 344:Src/usbd_conf.c ****     case HAL_BUSY :
 345:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 346:Src/usbd_conf.c ****     break;
 347:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 348:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 349:Src/usbd_conf.c ****     break;
 350:Src/usbd_conf.c ****     default :
 351:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 352:Src/usbd_conf.c ****     break;
 353:Src/usbd_conf.c ****   }
 354:Src/usbd_conf.c ****   return usb_status;  
 355:Src/usbd_conf.c **** }
 616              		.loc 1 355 0
 617 0014 08BD     		pop	{r3, pc}
 618              	.L42:
 619 0016 00BF     		.align	2
 620              	.L41:
 621 0018 00000000 		.word	CSWTCH.20
 622              		.cfi_endproc
 623              	.LFE79:
 625              		.section	.text.USBD_LL_Stop,"ax",%progbits
 626              		.align	1
 627              		.global	USBD_LL_Stop
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu softvfp
 633              	USBD_LL_Stop:
 634              	.LFB80:
 356:Src/usbd_conf.c **** 
 357:Src/usbd_conf.c **** /**
 358:Src/usbd_conf.c ****   * @brief  Stops the Low Level portion of the Device driver.
 359:Src/usbd_conf.c ****   * @param  pdev: Device handle
ARM GAS  /tmp/ccSnBx0I.s 			page 18


 360:Src/usbd_conf.c ****   * @retval USBD Status
 361:Src/usbd_conf.c ****   */
 362:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Stop (USBD_HandleTypeDef *pdev)
 363:Src/usbd_conf.c **** {
 635              		.loc 1 363 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              	.LVL63:
 640 0000 08B5     		push	{r3, lr}
 641              	.LCFI8:
 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 3, -8
 644              		.cfi_offset 14, -4
 364:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 365:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 366:Src/usbd_conf.c ****  
 367:Src/usbd_conf.c ****   hal_status = HAL_PCD_Stop(pdev->pData);
 645              		.loc 1 367 0
 646 0002 D0F82002 		ldr	r0, [r0, #544]
 647              	.LVL64:
 648 0006 FFF7FEFF 		bl	HAL_PCD_Stop
 649              	.LVL65:
 650 000a 0328     		cmp	r0, #3
 651 000c 9ABF     		itte	ls
 652 000e 024B     		ldrls	r3, .L46
 653 0010 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 654              	.LVL66:
 655 0012 0220     		movhi	r0, #2
 656              	.LVL67:
 368:Src/usbd_conf.c ****      
 369:Src/usbd_conf.c ****   switch (hal_status) {
 370:Src/usbd_conf.c ****     case HAL_OK :
 371:Src/usbd_conf.c ****       usb_status = USBD_OK;
 372:Src/usbd_conf.c ****     break;
 373:Src/usbd_conf.c ****     case HAL_ERROR :
 374:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 375:Src/usbd_conf.c ****     break;
 376:Src/usbd_conf.c ****     case HAL_BUSY :
 377:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 378:Src/usbd_conf.c ****     break;
 379:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 380:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 381:Src/usbd_conf.c ****     break;
 382:Src/usbd_conf.c ****     default :
 383:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 384:Src/usbd_conf.c ****     break;
 385:Src/usbd_conf.c ****   }
 386:Src/usbd_conf.c ****   return usb_status; 
 387:Src/usbd_conf.c **** }
 657              		.loc 1 387 0
 658 0014 08BD     		pop	{r3, pc}
 659              	.L47:
 660 0016 00BF     		.align	2
 661              	.L46:
 662 0018 00000000 		.word	CSWTCH.22
 663              		.cfi_endproc
ARM GAS  /tmp/ccSnBx0I.s 			page 19


 664              	.LFE80:
 666              		.section	.text.USBD_LL_OpenEP,"ax",%progbits
 667              		.align	1
 668              		.global	USBD_LL_OpenEP
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 672              		.fpu softvfp
 674              	USBD_LL_OpenEP:
 675              	.LFB81:
 388:Src/usbd_conf.c **** 
 389:Src/usbd_conf.c **** /**
 390:Src/usbd_conf.c ****   * @brief  Opens an endpoint of the Low Level Driver.
 391:Src/usbd_conf.c ****   * @param  pdev: Device handle
 392:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 393:Src/usbd_conf.c ****   * @param  ep_type: Endpoint Type
 394:Src/usbd_conf.c ****   * @param  ep_mps: Endpoint Max Packet Size
 395:Src/usbd_conf.c ****   * @retval USBD Status
 396:Src/usbd_conf.c ****   */
 397:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_OpenEP  (USBD_HandleTypeDef *pdev, 
 398:Src/usbd_conf.c ****                                       uint8_t  ep_addr,                                      
 399:Src/usbd_conf.c ****                                       uint8_t  ep_type,
 400:Src/usbd_conf.c ****                                       uint16_t ep_mps)
 401:Src/usbd_conf.c **** {
 676              		.loc 1 401 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              	.LVL68:
 681 0000 10B5     		push	{r4, lr}
 682              	.LCFI9:
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 4, -8
 685              		.cfi_offset 14, -4
 686              		.loc 1 401 0
 687 0002 1C46     		mov	r4, r3
 402:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 403:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 404:Src/usbd_conf.c **** 
 405:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Open(pdev->pData, 
 688              		.loc 1 405 0
 689 0004 D0F82002 		ldr	r0, [r0, #544]
 690              	.LVL69:
 691 0008 1346     		mov	r3, r2
 692              	.LVL70:
 693 000a 2246     		mov	r2, r4
 694              	.LVL71:
 695 000c FFF7FEFF 		bl	HAL_PCD_EP_Open
 696              	.LVL72:
 697 0010 0328     		cmp	r0, #3
 698 0012 9ABF     		itte	ls
 699 0014 014B     		ldrls	r3, .L51
 700 0016 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 701              	.LVL73:
 702 0018 0220     		movhi	r0, #2
 703              	.LVL74:
 406:Src/usbd_conf.c ****                                ep_addr, 
ARM GAS  /tmp/ccSnBx0I.s 			page 20


 407:Src/usbd_conf.c ****                                ep_mps, 
 408:Src/usbd_conf.c ****                                ep_type);
 409:Src/usbd_conf.c ****   
 410:Src/usbd_conf.c ****      
 411:Src/usbd_conf.c ****   switch (hal_status) {
 412:Src/usbd_conf.c ****     case HAL_OK :
 413:Src/usbd_conf.c ****       usb_status = USBD_OK;
 414:Src/usbd_conf.c ****     break;
 415:Src/usbd_conf.c ****     case HAL_ERROR :
 416:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 417:Src/usbd_conf.c ****     break;
 418:Src/usbd_conf.c ****     case HAL_BUSY :
 419:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 420:Src/usbd_conf.c ****     break;
 421:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 422:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 423:Src/usbd_conf.c ****     break;
 424:Src/usbd_conf.c ****     default :
 425:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 426:Src/usbd_conf.c ****     break;
 427:Src/usbd_conf.c ****   }
 428:Src/usbd_conf.c ****   return usb_status; 
 429:Src/usbd_conf.c **** }
 704              		.loc 1 429 0
 705 001a 10BD     		pop	{r4, pc}
 706              	.L52:
 707              		.align	2
 708              	.L51:
 709 001c 00000000 		.word	CSWTCH.24
 710              		.cfi_endproc
 711              	.LFE81:
 713              		.section	.text.USBD_LL_CloseEP,"ax",%progbits
 714              		.align	1
 715              		.global	USBD_LL_CloseEP
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu softvfp
 721              	USBD_LL_CloseEP:
 722              	.LFB82:
 430:Src/usbd_conf.c **** 
 431:Src/usbd_conf.c **** /**
 432:Src/usbd_conf.c ****   * @brief  Closes an endpoint of the Low Level Driver.
 433:Src/usbd_conf.c ****   * @param  pdev: Device handle
 434:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 435:Src/usbd_conf.c ****   * @retval USBD Status
 436:Src/usbd_conf.c ****   */
 437:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_CloseEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 438:Src/usbd_conf.c **** {
 723              		.loc 1 438 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              	.LVL75:
 728 0000 08B5     		push	{r3, lr}
 729              	.LCFI10:
 730              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccSnBx0I.s 			page 21


 731              		.cfi_offset 3, -8
 732              		.cfi_offset 14, -4
 439:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 440:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 441:Src/usbd_conf.c ****   
 442:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 733              		.loc 1 442 0
 734 0002 D0F82002 		ldr	r0, [r0, #544]
 735              	.LVL76:
 736 0006 FFF7FEFF 		bl	HAL_PCD_EP_Close
 737              	.LVL77:
 738 000a 0328     		cmp	r0, #3
 739 000c 9ABF     		itte	ls
 740 000e 024B     		ldrls	r3, .L56
 741 0010 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 742              	.LVL78:
 743 0012 0220     		movhi	r0, #2
 744              	.LVL79:
 443:Src/usbd_conf.c ****       
 444:Src/usbd_conf.c ****   switch (hal_status) {
 445:Src/usbd_conf.c ****     case HAL_OK :
 446:Src/usbd_conf.c ****       usb_status = USBD_OK;
 447:Src/usbd_conf.c ****     break;
 448:Src/usbd_conf.c ****     case HAL_ERROR :
 449:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 450:Src/usbd_conf.c ****     break;
 451:Src/usbd_conf.c ****     case HAL_BUSY :
 452:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 453:Src/usbd_conf.c ****     break;
 454:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 455:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 456:Src/usbd_conf.c ****     break;
 457:Src/usbd_conf.c ****     default :
 458:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 459:Src/usbd_conf.c ****     break;
 460:Src/usbd_conf.c ****   }
 461:Src/usbd_conf.c ****   return usb_status;  
 462:Src/usbd_conf.c **** }
 745              		.loc 1 462 0
 746 0014 08BD     		pop	{r3, pc}
 747              	.L57:
 748 0016 00BF     		.align	2
 749              	.L56:
 750 0018 00000000 		.word	CSWTCH.26
 751              		.cfi_endproc
 752              	.LFE82:
 754              		.section	.text.USBD_LL_FlushEP,"ax",%progbits
 755              		.align	1
 756              		.global	USBD_LL_FlushEP
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu softvfp
 762              	USBD_LL_FlushEP:
 763              	.LFB83:
 463:Src/usbd_conf.c **** 
 464:Src/usbd_conf.c **** /**
ARM GAS  /tmp/ccSnBx0I.s 			page 22


 465:Src/usbd_conf.c ****   * @brief  Flushes an endpoint of the Low Level Driver.
 466:Src/usbd_conf.c ****   * @param  pdev: Device handle
 467:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 468:Src/usbd_conf.c ****   * @retval USBD Status
 469:Src/usbd_conf.c ****   */
 470:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_FlushEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 471:Src/usbd_conf.c **** {
 764              		.loc 1 471 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              	.LVL80:
 769 0000 08B5     		push	{r3, lr}
 770              	.LCFI11:
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 3, -8
 773              		.cfi_offset 14, -4
 472:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 473:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 474:Src/usbd_conf.c ****   
 475:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Flush(pdev->pData, ep_addr);
 774              		.loc 1 475 0
 775 0002 D0F82002 		ldr	r0, [r0, #544]
 776              	.LVL81:
 777 0006 FFF7FEFF 		bl	HAL_PCD_EP_Flush
 778              	.LVL82:
 779 000a 0328     		cmp	r0, #3
 780 000c 9ABF     		itte	ls
 781 000e 024B     		ldrls	r3, .L61
 782 0010 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 783              	.LVL83:
 784 0012 0220     		movhi	r0, #2
 785              	.LVL84:
 476:Src/usbd_conf.c ****       
 477:Src/usbd_conf.c ****   switch (hal_status) {
 478:Src/usbd_conf.c ****     case HAL_OK :
 479:Src/usbd_conf.c ****       usb_status = USBD_OK;
 480:Src/usbd_conf.c ****     break;
 481:Src/usbd_conf.c ****     case HAL_ERROR :
 482:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 483:Src/usbd_conf.c ****     break;
 484:Src/usbd_conf.c ****     case HAL_BUSY :
 485:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 486:Src/usbd_conf.c ****     break;
 487:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 488:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 489:Src/usbd_conf.c ****     break;
 490:Src/usbd_conf.c ****     default :
 491:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 492:Src/usbd_conf.c ****     break;
 493:Src/usbd_conf.c ****   }
 494:Src/usbd_conf.c ****   return usb_status;  
 495:Src/usbd_conf.c **** }
 786              		.loc 1 495 0
 787 0014 08BD     		pop	{r3, pc}
 788              	.L62:
 789 0016 00BF     		.align	2
ARM GAS  /tmp/ccSnBx0I.s 			page 23


 790              	.L61:
 791 0018 00000000 		.word	CSWTCH.28
 792              		.cfi_endproc
 793              	.LFE83:
 795              		.section	.text.USBD_LL_StallEP,"ax",%progbits
 796              		.align	1
 797              		.global	USBD_LL_StallEP
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 801              		.fpu softvfp
 803              	USBD_LL_StallEP:
 804              	.LFB84:
 496:Src/usbd_conf.c **** 
 497:Src/usbd_conf.c **** /**
 498:Src/usbd_conf.c ****   * @brief  Sets a Stall condition on an endpoint of the Low Level Driver.
 499:Src/usbd_conf.c ****   * @param  pdev: Device handle
 500:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 501:Src/usbd_conf.c ****   * @retval USBD Status
 502:Src/usbd_conf.c ****   */
 503:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_StallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 504:Src/usbd_conf.c **** {
 805              		.loc 1 504 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              	.LVL85:
 810 0000 08B5     		push	{r3, lr}
 811              	.LCFI12:
 812              		.cfi_def_cfa_offset 8
 813              		.cfi_offset 3, -8
 814              		.cfi_offset 14, -4
 505:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 506:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 507:Src/usbd_conf.c ****   
 508:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 815              		.loc 1 508 0
 816 0002 D0F82002 		ldr	r0, [r0, #544]
 817              	.LVL86:
 818 0006 FFF7FEFF 		bl	HAL_PCD_EP_SetStall
 819              	.LVL87:
 820 000a 0328     		cmp	r0, #3
 821 000c 9ABF     		itte	ls
 822 000e 024B     		ldrls	r3, .L66
 823 0010 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 824              	.LVL88:
 825 0012 0220     		movhi	r0, #2
 826              	.LVL89:
 509:Src/usbd_conf.c ****       
 510:Src/usbd_conf.c ****   switch (hal_status) {
 511:Src/usbd_conf.c ****     case HAL_OK :
 512:Src/usbd_conf.c ****       usb_status = USBD_OK;
 513:Src/usbd_conf.c ****     break;
 514:Src/usbd_conf.c ****     case HAL_ERROR :
 515:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 516:Src/usbd_conf.c ****     break;
 517:Src/usbd_conf.c ****     case HAL_BUSY :
ARM GAS  /tmp/ccSnBx0I.s 			page 24


 518:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 519:Src/usbd_conf.c ****     break;
 520:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 521:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 522:Src/usbd_conf.c ****     break;
 523:Src/usbd_conf.c ****     default :
 524:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 525:Src/usbd_conf.c ****     break;
 526:Src/usbd_conf.c ****   }
 527:Src/usbd_conf.c ****   return usb_status;  
 528:Src/usbd_conf.c **** }
 827              		.loc 1 528 0
 828 0014 08BD     		pop	{r3, pc}
 829              	.L67:
 830 0016 00BF     		.align	2
 831              	.L66:
 832 0018 00000000 		.word	CSWTCH.30
 833              		.cfi_endproc
 834              	.LFE84:
 836              		.section	.text.USBD_LL_ClearStallEP,"ax",%progbits
 837              		.align	1
 838              		.global	USBD_LL_ClearStallEP
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 842              		.fpu softvfp
 844              	USBD_LL_ClearStallEP:
 845              	.LFB85:
 529:Src/usbd_conf.c **** 
 530:Src/usbd_conf.c **** /**
 531:Src/usbd_conf.c ****   * @brief  Clears a Stall condition on an endpoint of the Low Level Driver.
 532:Src/usbd_conf.c ****   * @param  pdev: Device handle
 533:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 534:Src/usbd_conf.c ****   * @retval USBD Status
 535:Src/usbd_conf.c ****   */
 536:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_ClearStallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 537:Src/usbd_conf.c **** {
 846              		.loc 1 537 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              	.LVL90:
 851 0000 08B5     		push	{r3, lr}
 852              	.LCFI13:
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 3, -8
 855              		.cfi_offset 14, -4
 538:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 539:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 540:Src/usbd_conf.c ****   
 541:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);  
 856              		.loc 1 541 0
 857 0002 D0F82002 		ldr	r0, [r0, #544]
 858              	.LVL91:
 859 0006 FFF7FEFF 		bl	HAL_PCD_EP_ClrStall
 860              	.LVL92:
 861 000a 0328     		cmp	r0, #3
ARM GAS  /tmp/ccSnBx0I.s 			page 25


 862 000c 9ABF     		itte	ls
 863 000e 024B     		ldrls	r3, .L71
 864 0010 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 865              	.LVL93:
 866 0012 0220     		movhi	r0, #2
 867              	.LVL94:
 542:Src/usbd_conf.c ****      
 543:Src/usbd_conf.c ****   switch (hal_status) {
 544:Src/usbd_conf.c ****     case HAL_OK :
 545:Src/usbd_conf.c ****       usb_status = USBD_OK;
 546:Src/usbd_conf.c ****     break;
 547:Src/usbd_conf.c ****     case HAL_ERROR :
 548:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 549:Src/usbd_conf.c ****     break;
 550:Src/usbd_conf.c ****     case HAL_BUSY :
 551:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 552:Src/usbd_conf.c ****     break;
 553:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 554:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 555:Src/usbd_conf.c ****     break;
 556:Src/usbd_conf.c ****     default :
 557:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 558:Src/usbd_conf.c ****     break;
 559:Src/usbd_conf.c ****   }
 560:Src/usbd_conf.c ****   return usb_status; 
 561:Src/usbd_conf.c **** }
 868              		.loc 1 561 0
 869 0014 08BD     		pop	{r3, pc}
 870              	.L72:
 871 0016 00BF     		.align	2
 872              	.L71:
 873 0018 00000000 		.word	CSWTCH.32
 874              		.cfi_endproc
 875              	.LFE85:
 877              		.section	.text.USBD_LL_IsStallEP,"ax",%progbits
 878              		.align	1
 879              		.global	USBD_LL_IsStallEP
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 883              		.fpu softvfp
 885              	USBD_LL_IsStallEP:
 886              	.LFB86:
 562:Src/usbd_conf.c **** 
 563:Src/usbd_conf.c **** /**
 564:Src/usbd_conf.c ****   * @brief  Returns Stall condition.
 565:Src/usbd_conf.c ****   * @param  pdev: Device handle
 566:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 567:Src/usbd_conf.c ****   * @retval Stall (1: Yes, 0: No)
 568:Src/usbd_conf.c ****   */
 569:Src/usbd_conf.c **** uint8_t USBD_LL_IsStallEP (USBD_HandleTypeDef *pdev, uint8_t ep_addr)   
 570:Src/usbd_conf.c **** {
 887              		.loc 1 570 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891              		@ link register save eliminated.
ARM GAS  /tmp/ccSnBx0I.s 			page 26


 892              	.LVL95:
 571:Src/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 572:Src/usbd_conf.c ****   
 573:Src/usbd_conf.c ****   if((ep_addr & 0x80) == 0x80)
 893              		.loc 1 573 0
 894 0000 0A06     		lsls	r2, r1, #24
 571:Src/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 895              		.loc 1 571 0
 896 0002 D0F82032 		ldr	r3, [r0, #544]
 897              	.LVL96:
 574:Src/usbd_conf.c ****   {
 575:Src/usbd_conf.c ****     return hpcd->IN_ep[ep_addr & 0x7F].is_stall; 
 898              		.loc 1 575 0
 899 0006 45BF     		ittet	mi
 900 0008 01F07F01 		andmi	r1, r1, #127
 901              	.LVL97:
 902 000c 03EB4113 		addmi	r3, r3, r1, lsl #5
 903              	.LVL98:
 576:Src/usbd_conf.c ****   }
 577:Src/usbd_conf.c ****   else
 578:Src/usbd_conf.c ****   {
 579:Src/usbd_conf.c ****     return hpcd->OUT_ep[ep_addr & 0x7F].is_stall; 
 904              		.loc 1 579 0
 905 0010 03EB4113 		addpl	r3, r3, r1, lsl #5
 575:Src/usbd_conf.c ****   }
 906              		.loc 1 575 0
 907 0014 93F82A00 		ldrbmi	r0, [r3, #42]	@ zero_extendqisi2
 908              	.LVL99:
 909              		.loc 1 579 0
 910 0018 58BF     		it	pl
 911 001a 93F80A02 		ldrbpl	r0, [r3, #522]	@ zero_extendqisi2
 580:Src/usbd_conf.c ****   }
 581:Src/usbd_conf.c **** }
 912              		.loc 1 581 0
 913 001e 7047     		bx	lr
 914              		.cfi_endproc
 915              	.LFE86:
 917              		.section	.text.USBD_LL_SetUSBAddress,"ax",%progbits
 918              		.align	1
 919              		.global	USBD_LL_SetUSBAddress
 920              		.syntax unified
 921              		.thumb
 922              		.thumb_func
 923              		.fpu softvfp
 925              	USBD_LL_SetUSBAddress:
 926              	.LFB87:
 582:Src/usbd_conf.c **** /**
 583:Src/usbd_conf.c ****   * @brief  Assigns a USB address to the device.
 584:Src/usbd_conf.c ****   * @param  pdev: Device handle
 585:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 586:Src/usbd_conf.c ****   * @retval USBD Status
 587:Src/usbd_conf.c ****   */
 588:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_SetUSBAddress (USBD_HandleTypeDef *pdev, uint8_t dev_addr)   
 589:Src/usbd_conf.c **** {
 927              		.loc 1 589 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccSnBx0I.s 			page 27


 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931              	.LVL100:
 932 0000 08B5     		push	{r3, lr}
 933              	.LCFI14:
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 3, -8
 936              		.cfi_offset 14, -4
 590:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 591:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 592:Src/usbd_conf.c ****   
 593:Src/usbd_conf.c ****   hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 937              		.loc 1 593 0
 938 0002 D0F82002 		ldr	r0, [r0, #544]
 939              	.LVL101:
 940 0006 FFF7FEFF 		bl	HAL_PCD_SetAddress
 941              	.LVL102:
 942 000a 0328     		cmp	r0, #3
 943 000c 9ABF     		itte	ls
 944 000e 024B     		ldrls	r3, .L79
 945 0010 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 946              	.LVL103:
 947 0012 0220     		movhi	r0, #2
 948              	.LVL104:
 594:Src/usbd_conf.c ****      
 595:Src/usbd_conf.c ****   switch (hal_status) {
 596:Src/usbd_conf.c ****     case HAL_OK :
 597:Src/usbd_conf.c ****       usb_status = USBD_OK;
 598:Src/usbd_conf.c ****     break;
 599:Src/usbd_conf.c ****     case HAL_ERROR :
 600:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 601:Src/usbd_conf.c ****     break;
 602:Src/usbd_conf.c ****     case HAL_BUSY :
 603:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 604:Src/usbd_conf.c ****     break;
 605:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 606:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 607:Src/usbd_conf.c ****     break;
 608:Src/usbd_conf.c ****     default :
 609:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 610:Src/usbd_conf.c ****     break;
 611:Src/usbd_conf.c ****   }
 612:Src/usbd_conf.c ****   return usb_status;  
 613:Src/usbd_conf.c **** }
 949              		.loc 1 613 0
 950 0014 08BD     		pop	{r3, pc}
 951              	.L80:
 952 0016 00BF     		.align	2
 953              	.L79:
 954 0018 00000000 		.word	CSWTCH.35
 955              		.cfi_endproc
 956              	.LFE87:
 958              		.section	.text.USBD_LL_Transmit,"ax",%progbits
 959              		.align	1
 960              		.global	USBD_LL_Transmit
 961              		.syntax unified
 962              		.thumb
 963              		.thumb_func
ARM GAS  /tmp/ccSnBx0I.s 			page 28


 964              		.fpu softvfp
 966              	USBD_LL_Transmit:
 967              	.LFB88:
 614:Src/usbd_conf.c **** 
 615:Src/usbd_conf.c **** /**
 616:Src/usbd_conf.c ****   * @brief  Transmits data over an endpoint.
 617:Src/usbd_conf.c ****   * @param  pdev: Device handle
 618:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 619:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be sent
 620:Src/usbd_conf.c ****   * @param  size: Data size    
 621:Src/usbd_conf.c ****   * @retval USBD Status
 622:Src/usbd_conf.c ****   */
 623:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_Transmit (USBD_HandleTypeDef *pdev, 
 624:Src/usbd_conf.c ****                                       uint8_t  ep_addr,                                      
 625:Src/usbd_conf.c ****                                       uint8_t  *pbuf,
 626:Src/usbd_conf.c ****                                       uint16_t  size)
 627:Src/usbd_conf.c **** {
 968              		.loc 1 627 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972              	.LVL105:
 973 0000 08B5     		push	{r3, lr}
 974              	.LCFI15:
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 3, -8
 977              		.cfi_offset 14, -4
 628:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 629:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 630:Src/usbd_conf.c **** 
 631:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 978              		.loc 1 631 0
 979 0002 D0F82002 		ldr	r0, [r0, #544]
 980              	.LVL106:
 981 0006 FFF7FEFF 		bl	HAL_PCD_EP_Transmit
 982              	.LVL107:
 983 000a 0328     		cmp	r0, #3
 984 000c 9ABF     		itte	ls
 985 000e 024B     		ldrls	r3, .L84
 986 0010 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 987              	.LVL108:
 988 0012 0220     		movhi	r0, #2
 989              	.LVL109:
 632:Src/usbd_conf.c ****      
 633:Src/usbd_conf.c ****   switch (hal_status) {
 634:Src/usbd_conf.c ****     case HAL_OK :
 635:Src/usbd_conf.c ****       usb_status = USBD_OK;
 636:Src/usbd_conf.c ****     break;
 637:Src/usbd_conf.c ****     case HAL_ERROR :
 638:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 639:Src/usbd_conf.c ****     break;
 640:Src/usbd_conf.c ****     case HAL_BUSY :
 641:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 642:Src/usbd_conf.c ****     break;
 643:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 644:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 645:Src/usbd_conf.c ****     break;
ARM GAS  /tmp/ccSnBx0I.s 			page 29


 646:Src/usbd_conf.c ****     default :
 647:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 648:Src/usbd_conf.c ****     break;
 649:Src/usbd_conf.c ****   }
 650:Src/usbd_conf.c ****   return usb_status;    
 651:Src/usbd_conf.c **** }
 990              		.loc 1 651 0
 991 0014 08BD     		pop	{r3, pc}
 992              	.L85:
 993 0016 00BF     		.align	2
 994              	.L84:
 995 0018 00000000 		.word	CSWTCH.37
 996              		.cfi_endproc
 997              	.LFE88:
 999              		.section	.text.USBD_LL_PrepareReceive,"ax",%progbits
 1000              		.align	1
 1001              		.global	USBD_LL_PrepareReceive
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
 1005              		.fpu softvfp
 1007              	USBD_LL_PrepareReceive:
 1008              	.LFB89:
 652:Src/usbd_conf.c **** 
 653:Src/usbd_conf.c **** /**
 654:Src/usbd_conf.c ****   * @brief  Prepares an endpoint for reception.
 655:Src/usbd_conf.c ****   * @param  pdev: Device handle
 656:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 657:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be received
 658:Src/usbd_conf.c ****   * @param  size: Data size
 659:Src/usbd_conf.c ****   * @retval USBD Status
 660:Src/usbd_conf.c ****   */
 661:Src/usbd_conf.c **** USBD_StatusTypeDef  USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, 
 662:Src/usbd_conf.c ****                                            uint8_t  ep_addr,                                      
 663:Src/usbd_conf.c ****                                            uint8_t  *pbuf,
 664:Src/usbd_conf.c ****                                            uint16_t  size)
 665:Src/usbd_conf.c **** {
 1009              		.loc 1 665 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              	.LVL110:
 1014 0000 08B5     		push	{r3, lr}
 1015              	.LCFI16:
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 3, -8
 1018              		.cfi_offset 14, -4
 666:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 667:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 668:Src/usbd_conf.c **** 
 669:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 1019              		.loc 1 669 0
 1020 0002 D0F82002 		ldr	r0, [r0, #544]
 1021              	.LVL111:
 1022 0006 FFF7FEFF 		bl	HAL_PCD_EP_Receive
 1023              	.LVL112:
 1024 000a 0328     		cmp	r0, #3
ARM GAS  /tmp/ccSnBx0I.s 			page 30


 1025 000c 9ABF     		itte	ls
 1026 000e 024B     		ldrls	r3, .L89
 1027 0010 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 1028              	.LVL113:
 1029 0012 0220     		movhi	r0, #2
 1030              	.LVL114:
 670:Src/usbd_conf.c ****      
 671:Src/usbd_conf.c ****   switch (hal_status) {
 672:Src/usbd_conf.c ****     case HAL_OK :
 673:Src/usbd_conf.c ****       usb_status = USBD_OK;
 674:Src/usbd_conf.c ****     break;
 675:Src/usbd_conf.c ****     case HAL_ERROR :
 676:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 677:Src/usbd_conf.c ****     break;
 678:Src/usbd_conf.c ****     case HAL_BUSY :
 679:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 680:Src/usbd_conf.c ****     break;
 681:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 682:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 683:Src/usbd_conf.c ****     break;
 684:Src/usbd_conf.c ****     default :
 685:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 686:Src/usbd_conf.c ****     break;
 687:Src/usbd_conf.c ****   }
 688:Src/usbd_conf.c ****   return usb_status; 
 689:Src/usbd_conf.c **** }
 1031              		.loc 1 689 0
 1032 0014 08BD     		pop	{r3, pc}
 1033              	.L90:
 1034 0016 00BF     		.align	2
 1035              	.L89:
 1036 0018 00000000 		.word	.LANCHOR0
 1037              		.cfi_endproc
 1038              	.LFE89:
 1040              		.section	.text.USBD_LL_GetRxDataSize,"ax",%progbits
 1041              		.align	1
 1042              		.global	USBD_LL_GetRxDataSize
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu softvfp
 1048              	USBD_LL_GetRxDataSize:
 1049              	.LFB90:
 690:Src/usbd_conf.c **** 
 691:Src/usbd_conf.c **** /**
 692:Src/usbd_conf.c ****   * @brief  Returns the last transfered packet size.
 693:Src/usbd_conf.c ****   * @param  pdev: Device handle
 694:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint Number
 695:Src/usbd_conf.c ****   * @retval Recived Data Size
 696:Src/usbd_conf.c ****   */
 697:Src/usbd_conf.c **** uint32_t USBD_LL_GetRxDataSize  (USBD_HandleTypeDef *pdev, uint8_t  ep_addr)  
 698:Src/usbd_conf.c **** {
 1050              		.loc 1 698 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054              	.LVL115:
ARM GAS  /tmp/ccSnBx0I.s 			page 31


 1055 0000 08B5     		push	{r3, lr}
 1056              	.LCFI17:
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 3, -8
 1059              		.cfi_offset 14, -4
 699:Src/usbd_conf.c ****   return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 1060              		.loc 1 699 0
 1061 0002 D0F82002 		ldr	r0, [r0, #544]
 1062              	.LVL116:
 1063 0006 FFF7FEFF 		bl	HAL_PCD_EP_GetRxCount
 1064              	.LVL117:
 700:Src/usbd_conf.c **** }
 1065              		.loc 1 700 0
 1066 000a 08BD     		pop	{r3, pc}
 1067              		.cfi_endproc
 1068              	.LFE90:
 1070              		.section	.text.USBD_LL_Delay,"ax",%progbits
 1071              		.align	1
 1072              		.global	USBD_LL_Delay
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1076              		.fpu softvfp
 1078              	USBD_LL_Delay:
 1079              	.LFB91:
 701:Src/usbd_conf.c **** 
 702:Src/usbd_conf.c **** /**
 703:Src/usbd_conf.c ****   * @brief  Delays routine for the USB Device Library.
 704:Src/usbd_conf.c ****   * @param  Delay: Delay in ms
 705:Src/usbd_conf.c ****   * @retval None
 706:Src/usbd_conf.c ****   */
 707:Src/usbd_conf.c **** void  USBD_LL_Delay (uint32_t Delay)
 708:Src/usbd_conf.c **** {
 1080              		.loc 1 708 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 0
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 1084              		@ link register save eliminated.
 1085              	.LVL118:
 709:Src/usbd_conf.c ****   HAL_Delay(Delay);  
 1086              		.loc 1 709 0
 1087 0000 FFF7FEBF 		b	HAL_Delay
 1088              	.LVL119:
 1089              		.cfi_endproc
 1090              	.LFE91:
 1092              		.section	.text.USBD_static_malloc,"ax",%progbits
 1093              		.align	1
 1094              		.global	USBD_static_malloc
 1095              		.syntax unified
 1096              		.thumb
 1097              		.thumb_func
 1098              		.fpu softvfp
 1100              	USBD_static_malloc:
 1101              	.LFB92:
 710:Src/usbd_conf.c **** }
 711:Src/usbd_conf.c **** 
 712:Src/usbd_conf.c **** /**
ARM GAS  /tmp/ccSnBx0I.s 			page 32


 713:Src/usbd_conf.c ****   * @brief  static single allocation.
 714:Src/usbd_conf.c ****   * @param  size: size of allocated memory
 715:Src/usbd_conf.c ****   * @retval None
 716:Src/usbd_conf.c ****   */
 717:Src/usbd_conf.c **** void *USBD_static_malloc(uint32_t size)
 718:Src/usbd_conf.c **** {
 1102              		.loc 1 718 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106              		@ link register save eliminated.
 1107              	.LVL120:
 719:Src/usbd_conf.c ****   static uint32_t mem[(sizeof(USBD_CDC_HandleTypeDef)/4)+1];/* On 32-bit boundary */
 720:Src/usbd_conf.c ****   return mem;
 721:Src/usbd_conf.c **** }
 1108              		.loc 1 721 0
 1109 0000 0048     		ldr	r0, .L94
 1110              	.LVL121:
 1111 0002 7047     		bx	lr
 1112              	.L95:
 1113              		.align	2
 1114              	.L94:
 1115 0004 00000000 		.word	.LANCHOR1
 1116              		.cfi_endproc
 1117              	.LFE92:
 1119              		.section	.text.USBD_static_free,"ax",%progbits
 1120              		.align	1
 1121              		.global	USBD_static_free
 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1125              		.fpu softvfp
 1127              	USBD_static_free:
 1128              	.LFB93:
 722:Src/usbd_conf.c **** 
 723:Src/usbd_conf.c **** /**
 724:Src/usbd_conf.c ****   * @brief  Dummy memory free
 725:Src/usbd_conf.c ****   * @param  *p pointer to allocated  memory address
 726:Src/usbd_conf.c ****   * @retval None
 727:Src/usbd_conf.c ****   */
 728:Src/usbd_conf.c **** void USBD_static_free(void *p)
 729:Src/usbd_conf.c **** {
 1129              		.loc 1 729 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 1133              		@ link register save eliminated.
 1134              	.LVL122:
 1135 0000 7047     		bx	lr
 1136              		.cfi_endproc
 1137              	.LFE93:
 1139              		.section	.text.HAL_PCDEx_SetConnectionState,"ax",%progbits
 1140              		.align	1
 1141              		.global	HAL_PCDEx_SetConnectionState
 1142              		.syntax unified
 1143              		.thumb
 1144              		.thumb_func
ARM GAS  /tmp/ccSnBx0I.s 			page 33


 1145              		.fpu softvfp
 1147              	HAL_PCDEx_SetConnectionState:
 1148              	.LFB94:
 730:Src/usbd_conf.c **** 
 731:Src/usbd_conf.c **** }
 732:Src/usbd_conf.c **** 
 733:Src/usbd_conf.c **** /**
 734:Src/usbd_conf.c **** * @brief Software Device Connection
 735:Src/usbd_conf.c **** * @param hpcd: PCD handle
 736:Src/usbd_conf.c **** * @param state: connection state (0 : disconnected / 1: connected) 
 737:Src/usbd_conf.c **** * @retval None
 738:Src/usbd_conf.c **** */
 739:Src/usbd_conf.c **** void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
 740:Src/usbd_conf.c **** {
 1149              		.loc 1 740 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 0, uses_anonymous_args = 0
 1153              		@ link register save eliminated.
 1154              	.LVL123:
 1155 0000 7047     		bx	lr
 1156              		.cfi_endproc
 1157              	.LFE94:
 1159              		.set	CSWTCH.18,CSWTCH.39
 1160              		.set	CSWTCH.20,CSWTCH.39
 1161              		.set	CSWTCH.22,CSWTCH.39
 1162              		.set	CSWTCH.24,CSWTCH.39
 1163              		.set	CSWTCH.26,CSWTCH.39
 1164              		.set	CSWTCH.28,CSWTCH.39
 1165              		.set	CSWTCH.30,CSWTCH.39
 1166              		.set	CSWTCH.32,CSWTCH.39
 1167              		.set	CSWTCH.35,CSWTCH.39
 1168              		.set	CSWTCH.37,CSWTCH.39
 1169              		.comm	hpcd_USB_FS,1056,4
 1170              		.section	.bss.mem.7686,"aw",%nobits
 1171              		.align	2
 1172              		.set	.LANCHOR1,. + 0
 1175              	mem.7686:
 1176 0000 00000000 		.space	544
 1176      00000000 
 1176      00000000 
 1176      00000000 
 1176      00000000 
 1177              		.section	.rodata.CSWTCH.39,"a",%progbits
 1178              		.set	.LANCHOR0,. + 0
 1181              	CSWTCH.39:
 1182 0000 00       		.byte	0
 1183 0001 02       		.byte	2
 1184 0002 01       		.byte	1
 1185 0003 02       		.byte	2
 1186              		.section	.rodata.USBD_LL_Init.str1.1,"aMS",%progbits,1
 1187              	.LC0:
 1188 0000 5372632F 		.ascii	"Src/usbd_conf.c\000"
 1188      75736264 
 1188      5F636F6E 
 1188      662E6300 
 1189              		.text
ARM GAS  /tmp/ccSnBx0I.s 			page 34


 1190              	.Letext0:
 1191              		.file 2 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/machine/_default_types.h"
 1192              		.file 3 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_stdint.h"
 1193              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1194              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1195              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1196              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1197              		.file 8 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/lock.h"
 1198              		.file 9 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/_types.h"
 1199              		.file 10 "/opt/gcc-arm-none-eabi-6-2017-q1-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1200              		.file 11 "/opt/gcc-arm-none-eabi-6-2017-q1-update/arm-none-eabi/include/sys/reent.h"
 1201              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1202              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 1203              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd.h"
 1204              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1205              		.file 16 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 1206              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1207              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd_ex.h"
 1208              		.file 19 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h"
 1209              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccSnBx0I.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_conf.c
     /tmp/ccSnBx0I.s:16     .text.HAL_PCD_MspInit:0000000000000000 $t
     /tmp/ccSnBx0I.s:23     .text.HAL_PCD_MspInit:0000000000000000 HAL_PCD_MspInit
     /tmp/ccSnBx0I.s:84     .text.HAL_PCD_MspInit:0000000000000038 $d
     /tmp/ccSnBx0I.s:89     .text.HAL_PCD_MspDeInit:0000000000000000 $t
     /tmp/ccSnBx0I.s:96     .text.HAL_PCD_MspDeInit:0000000000000000 HAL_PCD_MspDeInit
     /tmp/ccSnBx0I.s:126    .text.HAL_PCD_MspDeInit:000000000000001c $d
     /tmp/ccSnBx0I.s:132    .text.HAL_PCD_SetupStageCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:139    .text.HAL_PCD_SetupStageCallback:0000000000000000 HAL_PCD_SetupStageCallback
     /tmp/ccSnBx0I.s:157    .text.HAL_PCD_DataOutStageCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:164    .text.HAL_PCD_DataOutStageCallback:0000000000000000 HAL_PCD_DataOutStageCallback
     /tmp/ccSnBx0I.s:183    .text.HAL_PCD_DataInStageCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:190    .text.HAL_PCD_DataInStageCallback:0000000000000000 HAL_PCD_DataInStageCallback
     /tmp/ccSnBx0I.s:209    .text.HAL_PCD_SOFCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:216    .text.HAL_PCD_SOFCallback:0000000000000000 HAL_PCD_SOFCallback
     /tmp/ccSnBx0I.s:233    .text.HAL_PCD_ResetCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:240    .text.HAL_PCD_ResetCallback:0000000000000000 HAL_PCD_ResetCallback
     /tmp/ccSnBx0I.s:276    .text.HAL_PCD_SuspendCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:283    .text.HAL_PCD_SuspendCallback:0000000000000000 HAL_PCD_SuspendCallback
     /tmp/ccSnBx0I.s:316    .text.HAL_PCD_SuspendCallback:000000000000001c $d
     /tmp/ccSnBx0I.s:321    .text.HAL_PCD_ResumeCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:328    .text.HAL_PCD_ResumeCallback:0000000000000000 HAL_PCD_ResumeCallback
     /tmp/ccSnBx0I.s:345    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:352    .text.HAL_PCD_ISOOUTIncompleteCallback:0000000000000000 HAL_PCD_ISOOUTIncompleteCallback
     /tmp/ccSnBx0I.s:369    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:376    .text.HAL_PCD_ISOINIncompleteCallback:0000000000000000 HAL_PCD_ISOINIncompleteCallback
     /tmp/ccSnBx0I.s:393    .text.HAL_PCD_ConnectCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:400    .text.HAL_PCD_ConnectCallback:0000000000000000 HAL_PCD_ConnectCallback
     /tmp/ccSnBx0I.s:417    .text.HAL_PCD_DisconnectCallback:0000000000000000 $t
     /tmp/ccSnBx0I.s:424    .text.HAL_PCD_DisconnectCallback:0000000000000000 HAL_PCD_DisconnectCallback
     /tmp/ccSnBx0I.s:441    .text.USBD_LL_Init:0000000000000000 $t
     /tmp/ccSnBx0I.s:448    .text.USBD_LL_Init:0000000000000000 USBD_LL_Init
     /tmp/ccSnBx0I.s:537    .text.USBD_LL_Init:0000000000000084 $d
                            *COM*:0000000000000420 hpcd_USB_FS
     /tmp/ccSnBx0I.s:544    .text.USBD_LL_DeInit:0000000000000000 $t
     /tmp/ccSnBx0I.s:551    .text.USBD_LL_DeInit:0000000000000000 USBD_LL_DeInit
     /tmp/ccSnBx0I.s:580    .text.USBD_LL_DeInit:0000000000000018 $d
                .rodata.CSWTCH.39:0000000000000000 CSWTCH.18
     /tmp/ccSnBx0I.s:585    .text.USBD_LL_Start:0000000000000000 $t
     /tmp/ccSnBx0I.s:592    .text.USBD_LL_Start:0000000000000000 USBD_LL_Start
     /tmp/ccSnBx0I.s:621    .text.USBD_LL_Start:0000000000000018 $d
                .rodata.CSWTCH.39:0000000000000000 CSWTCH.20
     /tmp/ccSnBx0I.s:626    .text.USBD_LL_Stop:0000000000000000 $t
     /tmp/ccSnBx0I.s:633    .text.USBD_LL_Stop:0000000000000000 USBD_LL_Stop
     /tmp/ccSnBx0I.s:662    .text.USBD_LL_Stop:0000000000000018 $d
                .rodata.CSWTCH.39:0000000000000000 CSWTCH.22
     /tmp/ccSnBx0I.s:667    .text.USBD_LL_OpenEP:0000000000000000 $t
     /tmp/ccSnBx0I.s:674    .text.USBD_LL_OpenEP:0000000000000000 USBD_LL_OpenEP
     /tmp/ccSnBx0I.s:709    .text.USBD_LL_OpenEP:000000000000001c $d
                .rodata.CSWTCH.39:0000000000000000 CSWTCH.24
     /tmp/ccSnBx0I.s:714    .text.USBD_LL_CloseEP:0000000000000000 $t
     /tmp/ccSnBx0I.s:721    .text.USBD_LL_CloseEP:0000000000000000 USBD_LL_CloseEP
     /tmp/ccSnBx0I.s:750    .text.USBD_LL_CloseEP:0000000000000018 $d
                .rodata.CSWTCH.39:0000000000000000 CSWTCH.26
     /tmp/ccSnBx0I.s:755    .text.USBD_LL_FlushEP:0000000000000000 $t
     /tmp/ccSnBx0I.s:762    .text.USBD_LL_FlushEP:0000000000000000 USBD_LL_FlushEP
ARM GAS  /tmp/ccSnBx0I.s 			page 36


     /tmp/ccSnBx0I.s:791    .text.USBD_LL_FlushEP:0000000000000018 $d
                .rodata.CSWTCH.39:0000000000000000 CSWTCH.28
     /tmp/ccSnBx0I.s:796    .text.USBD_LL_StallEP:0000000000000000 $t
     /tmp/ccSnBx0I.s:803    .text.USBD_LL_StallEP:0000000000000000 USBD_LL_StallEP
     /tmp/ccSnBx0I.s:832    .text.USBD_LL_StallEP:0000000000000018 $d
                .rodata.CSWTCH.39:0000000000000000 CSWTCH.30
     /tmp/ccSnBx0I.s:837    .text.USBD_LL_ClearStallEP:0000000000000000 $t
     /tmp/ccSnBx0I.s:844    .text.USBD_LL_ClearStallEP:0000000000000000 USBD_LL_ClearStallEP
     /tmp/ccSnBx0I.s:873    .text.USBD_LL_ClearStallEP:0000000000000018 $d
                .rodata.CSWTCH.39:0000000000000000 CSWTCH.32
     /tmp/ccSnBx0I.s:878    .text.USBD_LL_IsStallEP:0000000000000000 $t
     /tmp/ccSnBx0I.s:885    .text.USBD_LL_IsStallEP:0000000000000000 USBD_LL_IsStallEP
     /tmp/ccSnBx0I.s:918    .text.USBD_LL_SetUSBAddress:0000000000000000 $t
     /tmp/ccSnBx0I.s:925    .text.USBD_LL_SetUSBAddress:0000000000000000 USBD_LL_SetUSBAddress
     /tmp/ccSnBx0I.s:954    .text.USBD_LL_SetUSBAddress:0000000000000018 $d
                .rodata.CSWTCH.39:0000000000000000 CSWTCH.35
     /tmp/ccSnBx0I.s:959    .text.USBD_LL_Transmit:0000000000000000 $t
     /tmp/ccSnBx0I.s:966    .text.USBD_LL_Transmit:0000000000000000 USBD_LL_Transmit
     /tmp/ccSnBx0I.s:995    .text.USBD_LL_Transmit:0000000000000018 $d
                .rodata.CSWTCH.39:0000000000000000 CSWTCH.37
     /tmp/ccSnBx0I.s:1000   .text.USBD_LL_PrepareReceive:0000000000000000 $t
     /tmp/ccSnBx0I.s:1007   .text.USBD_LL_PrepareReceive:0000000000000000 USBD_LL_PrepareReceive
     /tmp/ccSnBx0I.s:1036   .text.USBD_LL_PrepareReceive:0000000000000018 $d
     /tmp/ccSnBx0I.s:1041   .text.USBD_LL_GetRxDataSize:0000000000000000 $t
     /tmp/ccSnBx0I.s:1048   .text.USBD_LL_GetRxDataSize:0000000000000000 USBD_LL_GetRxDataSize
     /tmp/ccSnBx0I.s:1071   .text.USBD_LL_Delay:0000000000000000 $t
     /tmp/ccSnBx0I.s:1078   .text.USBD_LL_Delay:0000000000000000 USBD_LL_Delay
     /tmp/ccSnBx0I.s:1093   .text.USBD_static_malloc:0000000000000000 $t
     /tmp/ccSnBx0I.s:1100   .text.USBD_static_malloc:0000000000000000 USBD_static_malloc
     /tmp/ccSnBx0I.s:1115   .text.USBD_static_malloc:0000000000000004 $d
     /tmp/ccSnBx0I.s:1120   .text.USBD_static_free:0000000000000000 $t
     /tmp/ccSnBx0I.s:1127   .text.USBD_static_free:0000000000000000 USBD_static_free
     /tmp/ccSnBx0I.s:1140   .text.HAL_PCDEx_SetConnectionState:0000000000000000 $t
     /tmp/ccSnBx0I.s:1147   .text.HAL_PCDEx_SetConnectionState:0000000000000000 HAL_PCDEx_SetConnectionState
     /tmp/ccSnBx0I.s:1181   .rodata.CSWTCH.39:0000000000000000 CSWTCH.39
     /tmp/ccSnBx0I.s:1171   .bss.mem.7686:0000000000000000 $d
     /tmp/ccSnBx0I.s:1175   .bss.mem.7686:0000000000000000 mem.7686
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
USBD_LL_SetupStage
USBD_LL_DataOutStage
USBD_LL_DataInStage
USBD_LL_SOF
USBD_LL_SetSpeed
USBD_LL_Reset
USBD_LL_Suspend
USBD_LL_Resume
USBD_LL_IsoOUTIncomplete
USBD_LL_IsoINIncomplete
USBD_LL_DevConnected
USBD_LL_DevDisconnected
HAL_PCD_Init
_Error_Handler
ARM GAS  /tmp/ccSnBx0I.s 			page 37


HAL_PCDEx_PMAConfig
HAL_PCD_DeInit
HAL_PCD_Start
HAL_PCD_Stop
HAL_PCD_EP_Open
HAL_PCD_EP_Close
HAL_PCD_EP_Flush
HAL_PCD_EP_SetStall
HAL_PCD_EP_ClrStall
HAL_PCD_SetAddress
HAL_PCD_EP_Transmit
HAL_PCD_EP_Receive
HAL_PCD_EP_GetRxCount
HAL_Delay
